{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/00150/AI_07_JYP_Project_section_02/blob/main/2022__%EC%9A%B0%ED%81%AC%EB%9D%BC%EC%9D%B4%EB%82%98_%EB%9F%AC%EC%8B%9C%EC%95%84_%EC%A0%84%EC%9F%81_part5%20%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D%20%EC%A7%84%ED%96%89%EC%A4%91ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "## Project2. 우크라이나 러시아 전쟁 🏹\n",
        "\n",
        ">22.02.24 개전된 전쟁은 현재까지 계속 진행중에 있습니다.<br/>\n",
        "주어진 데이터를 이용하여 손실 및 앞으로의 방향을 예측해보도록 합니다.<br/>\n",
        "\n",
        "* ✔참고 : 컬럼 별 주요 데이터 출처는 **우크라이나 군대**와 **국방부** 입니다."
      ],
      "metadata": {
        "id": "vBCKYbDVbNkP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### ❗주의.\n",
        "* **장비 및 인력 손실의 수**는 **러시아에만 해당**합니다.\n",
        "* 우크라이나에서는 자국의 장비 및 인력 손실에 관하여 정확하게 발표하지 않았습니다."
      ],
      "metadata": {
        "id": "W2hwAlUZc81N"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vRrgVlYxbVr_",
        "outputId": "5d3297bb-7df7-4cf0-da80-b4d7c287a814"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "fps4D1ANaHEV"
      },
      "outputs": [],
      "source": [
        "# 필요한 패키지 & 라이브러리 import\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import scipy.stats as stats # 이 모듈을 이용히여 확률 분포, 요약 및 빈도 통계, 상관 함수 및 통계 테스트, 마스킹 통계, 커널 밀도 추정을 알 수 있다.\n",
        "import matplotlib.pyplot as plt\n",
        "from pylab import rcParams # 이미지 해상도 조절을 위해 불러온 패키지.\n",
        "import seaborn as sns\n",
        "\n",
        "\n",
        "# 시각화 : plotly 에  필요한 패키지 추가.\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 시각화 라이브러리 한글 깨짐 현상 방지\n",
        "\n",
        "!sudo apt-get install -y fonts-nanum\n",
        "!sudo fc-cache -fv\n",
        "!rm ~/.cache/matplotlib -rf"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Y6IPIcFDW0aZ",
        "outputId": "1ba40be9-bb31-4559-bfc0-3886d39b80b5"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Reading package lists... Done\n",
            "Building dependency tree       \n",
            "Reading state information... Done\n",
            "fonts-nanum is already the newest version (20170925-1).\n",
            "The following package was automatically installed and is no longer required:\n",
            "  libnvidia-common-460\n",
            "Use 'sudo apt autoremove' to remove it.\n",
            "0 upgraded, 0 newly installed, 0 to remove and 20 not upgraded.\n",
            "/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n",
            "/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n",
            "/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n",
            "/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n",
            "/usr/share/fonts/truetype/nanum: caching, new cache contents: 10 fonts, 0 dirs\n",
            "/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n",
            "/root/.local/share/fonts: skipping, no such directory\n",
            "/root/.fonts: skipping, no such directory\n",
            "/var/cache/fontconfig: cleaning cache directory\n",
            "/root/.cache/fontconfig: not cleaning non-existent cache directory\n",
            "/root/.fontconfig: not cleaning non-existent cache directory\n",
            "fc-cache: succeeded\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "url1 = '/content/drive/MyDrive/new_project02/russia_losses_equipment.csv'\n",
        "url2 = '/content/drive/MyDrive/new_project02/russia_losses_personnel.csv'"
      ],
      "metadata": {
        "id": "UNYhCzO8aVRM"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 데이터 불러오기\n",
        "df1 = pd.read_csv(url1)"
      ],
      "metadata": {
        "id": "qdSim6cvabpb"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 392
        },
        "id": "RtlRseeMal6F",
        "outputId": "c7760941-5267-4659-e9d8-32ee5e6a3660"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         date  day  aircraft  helicopter  tank  APC  field artillery  MRL  \\\n",
              "0  2022-02-25    2        10           7    80  516               49    4   \n",
              "1  2022-02-26    3        27          26   146  706               49    4   \n",
              "2  2022-02-27    4        27          26   150  706               50    4   \n",
              "3  2022-02-28    5        29          29   150  816               74   21   \n",
              "4  2022-03-01    6        29          29   198  846               77   24   \n",
              "\n",
              "   military auto  fuel tank  drone  naval ship  anti-aircraft warfare  \\\n",
              "0          100.0       60.0      0           2                      0   \n",
              "1          130.0       60.0      2           2                      0   \n",
              "2          130.0       60.0      2           2                      0   \n",
              "3          291.0       60.0      3           2                      5   \n",
              "4          305.0       60.0      3           2                      7   \n",
              "\n",
              "   special equipment  mobile SRBM system greatest losses direction  \\\n",
              "0                NaN                 NaN                       NaN   \n",
              "1                NaN                 NaN                       NaN   \n",
              "2                NaN                 NaN                       NaN   \n",
              "3                NaN                 NaN                       NaN   \n",
              "4                NaN                 NaN                       NaN   \n",
              "\n",
              "   vehicles and fuel tanks  cruise missiles  \n",
              "0                      NaN              NaN  \n",
              "1                      NaN              NaN  \n",
              "2                      NaN              NaN  \n",
              "3                      NaN              NaN  \n",
              "4                      NaN              NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c1afa749-1dd0-442b-8b08-240bd19deb67\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>day</th>\n",
              "      <th>aircraft</th>\n",
              "      <th>helicopter</th>\n",
              "      <th>tank</th>\n",
              "      <th>APC</th>\n",
              "      <th>field artillery</th>\n",
              "      <th>MRL</th>\n",
              "      <th>military auto</th>\n",
              "      <th>fuel tank</th>\n",
              "      <th>drone</th>\n",
              "      <th>naval ship</th>\n",
              "      <th>anti-aircraft warfare</th>\n",
              "      <th>special equipment</th>\n",
              "      <th>mobile SRBM system</th>\n",
              "      <th>greatest losses direction</th>\n",
              "      <th>vehicles and fuel tanks</th>\n",
              "      <th>cruise missiles</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-25</td>\n",
              "      <td>2</td>\n",
              "      <td>10</td>\n",
              "      <td>7</td>\n",
              "      <td>80</td>\n",
              "      <td>516</td>\n",
              "      <td>49</td>\n",
              "      <td>4</td>\n",
              "      <td>100.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-02-26</td>\n",
              "      <td>3</td>\n",
              "      <td>27</td>\n",
              "      <td>26</td>\n",
              "      <td>146</td>\n",
              "      <td>706</td>\n",
              "      <td>49</td>\n",
              "      <td>4</td>\n",
              "      <td>130.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-02-27</td>\n",
              "      <td>4</td>\n",
              "      <td>27</td>\n",
              "      <td>26</td>\n",
              "      <td>150</td>\n",
              "      <td>706</td>\n",
              "      <td>50</td>\n",
              "      <td>4</td>\n",
              "      <td>130.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-02-28</td>\n",
              "      <td>5</td>\n",
              "      <td>29</td>\n",
              "      <td>29</td>\n",
              "      <td>150</td>\n",
              "      <td>816</td>\n",
              "      <td>74</td>\n",
              "      <td>21</td>\n",
              "      <td>291.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-03-01</td>\n",
              "      <td>6</td>\n",
              "      <td>29</td>\n",
              "      <td>29</td>\n",
              "      <td>198</td>\n",
              "      <td>846</td>\n",
              "      <td>77</td>\n",
              "      <td>24</td>\n",
              "      <td>305.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c1afa749-1dd0-442b-8b08-240bd19deb67')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c1afa749-1dd0-442b-8b08-240bd19deb67 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c1afa749-1dd0-442b-8b08-240bd19deb67');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 데이터 불러오기 df2\n",
        "df2 = pd.read_csv(url2)"
      ],
      "metadata": {
        "id": "-cCbf-3BannE"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df2.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "gp0qaRHmaqh5",
        "outputId": "60e37cd0-1575-4404-fc68-e0b19084ea85"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         date  day  personnel personnel*    POW\n",
              "0  2022-02-25    2       2800      about    0.0\n",
              "1  2022-02-26    3       4300      about    0.0\n",
              "2  2022-02-27    4       4500      about    0.0\n",
              "3  2022-02-28    5       5300      about    0.0\n",
              "4  2022-03-01    6       5710      about  200.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5f1456cf-e4ee-4c42-bb7a-b87c1fea19c0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>day</th>\n",
              "      <th>personnel</th>\n",
              "      <th>personnel*</th>\n",
              "      <th>POW</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-25</td>\n",
              "      <td>2</td>\n",
              "      <td>2800</td>\n",
              "      <td>about</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-02-26</td>\n",
              "      <td>3</td>\n",
              "      <td>4300</td>\n",
              "      <td>about</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-02-27</td>\n",
              "      <td>4</td>\n",
              "      <td>4500</td>\n",
              "      <td>about</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-02-28</td>\n",
              "      <td>5</td>\n",
              "      <td>5300</td>\n",
              "      <td>about</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-03-01</td>\n",
              "      <td>6</td>\n",
              "      <td>5710</td>\n",
              "      <td>about</td>\n",
              "      <td>200.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f1456cf-e4ee-4c42-bb7a-b87c1fea19c0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5f1456cf-e4ee-4c42-bb7a-b87c1fea19c0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5f1456cf-e4ee-4c42-bb7a-b87c1fea19c0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "## Part 1. Data EDA.\n",
        ">분석, 예측 및 분류를 진행하기 이전에 데이터를 살펴보도록 합니다.<br>\n",
        "가독성을 높히기 위하여 데이터의 컬럼을 한글로 바꿔줍니다.\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "j-i92SB-a4zM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df1.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X4vMQBfmcVCq",
        "outputId": "0fc03ce8-cc69-4c4d-bd6c-fdcd8dbf956e"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['date', 'day', 'aircraft', 'helicopter', 'tank', 'APC',\n",
              "       'field artillery', 'MRL', 'military auto', 'fuel tank', 'drone',\n",
              "       'naval ship', 'anti-aircraft warfare', 'special equipment',\n",
              "       'mobile SRBM system', 'greatest losses direction',\n",
              "       'vehicles and fuel tanks', 'cruise missiles'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 컬럼명을 변경하기 전의 이름을 보관합니다.\n",
        "columns_name_not_modified = df1.columns"
      ],
      "metadata": {
        "id": "7nNyUiEviI9B"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "eq_df = df1.rename(columns={'date':'날짜','day':'개전일','aircraft':'항공기','helicopter':'헬리콥터','tank' : '탱크',\n",
        "                    'APC':'장갑차','field artillery': '야포' ,'MRL' :'다중로켓발사기','military auto' : '자동화기기',\n",
        "                    'fuel tank': '연료탱크', 'drone':'드론' ,'naval ship' : '해군함정', 'anti-aircraft warfare' : '방공포', 'special equipment' : '특수_장비',\n",
        "                    'mobile SRBM system' : '자동화_탄도_미사일', 'vehicles and fuel tanks' : '탈것_및_연료탱크', 'cruise missiles' : '크루즈_미사일','greatest losses direction' : '피해가_큰_지역'})\n",
        "\n",
        "eq_df.head()"
      ],
      "metadata": {
        "id": "Kqrqat7Eceic",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        },
        "outputId": "1d30ee3f-0e32-4185-ac0f-1266afa0710e"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           날짜  개전일  항공기  헬리콥터   탱크  장갑차  야포  다중로켓발사기  자동화기기  연료탱크  드론  해군함정  \\\n",
              "0  2022-02-25    2   10     7   80  516  49        4  100.0  60.0   0     2   \n",
              "1  2022-02-26    3   27    26  146  706  49        4  130.0  60.0   2     2   \n",
              "2  2022-02-27    4   27    26  150  706  50        4  130.0  60.0   2     2   \n",
              "3  2022-02-28    5   29    29  150  816  74       21  291.0  60.0   3     2   \n",
              "4  2022-03-01    6   29    29  198  846  77       24  305.0  60.0   3     2   \n",
              "\n",
              "   방공포  특수_장비  자동화_탄도_미사일 피해가_큰_지역  탈것_및_연료탱크  크루즈_미사일  \n",
              "0    0    NaN         NaN      NaN        NaN      NaN  \n",
              "1    0    NaN         NaN      NaN        NaN      NaN  \n",
              "2    0    NaN         NaN      NaN        NaN      NaN  \n",
              "3    5    NaN         NaN      NaN        NaN      NaN  \n",
              "4    7    NaN         NaN      NaN        NaN      NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1e341a05-e21f-459e-b4dc-68cd7b3757d8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>날짜</th>\n",
              "      <th>개전일</th>\n",
              "      <th>항공기</th>\n",
              "      <th>헬리콥터</th>\n",
              "      <th>탱크</th>\n",
              "      <th>장갑차</th>\n",
              "      <th>야포</th>\n",
              "      <th>다중로켓발사기</th>\n",
              "      <th>자동화기기</th>\n",
              "      <th>연료탱크</th>\n",
              "      <th>드론</th>\n",
              "      <th>해군함정</th>\n",
              "      <th>방공포</th>\n",
              "      <th>특수_장비</th>\n",
              "      <th>자동화_탄도_미사일</th>\n",
              "      <th>피해가_큰_지역</th>\n",
              "      <th>탈것_및_연료탱크</th>\n",
              "      <th>크루즈_미사일</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-25</td>\n",
              "      <td>2</td>\n",
              "      <td>10</td>\n",
              "      <td>7</td>\n",
              "      <td>80</td>\n",
              "      <td>516</td>\n",
              "      <td>49</td>\n",
              "      <td>4</td>\n",
              "      <td>100.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-02-26</td>\n",
              "      <td>3</td>\n",
              "      <td>27</td>\n",
              "      <td>26</td>\n",
              "      <td>146</td>\n",
              "      <td>706</td>\n",
              "      <td>49</td>\n",
              "      <td>4</td>\n",
              "      <td>130.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-02-27</td>\n",
              "      <td>4</td>\n",
              "      <td>27</td>\n",
              "      <td>26</td>\n",
              "      <td>150</td>\n",
              "      <td>706</td>\n",
              "      <td>50</td>\n",
              "      <td>4</td>\n",
              "      <td>130.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-02-28</td>\n",
              "      <td>5</td>\n",
              "      <td>29</td>\n",
              "      <td>29</td>\n",
              "      <td>150</td>\n",
              "      <td>816</td>\n",
              "      <td>74</td>\n",
              "      <td>21</td>\n",
              "      <td>291.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-03-01</td>\n",
              "      <td>6</td>\n",
              "      <td>29</td>\n",
              "      <td>29</td>\n",
              "      <td>198</td>\n",
              "      <td>846</td>\n",
              "      <td>77</td>\n",
              "      <td>24</td>\n",
              "      <td>305.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e341a05-e21f-459e-b4dc-68cd7b3757d8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1e341a05-e21f-459e-b4dc-68cd7b3757d8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1e341a05-e21f-459e-b4dc-68cd7b3757d8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### df2의 데이터의 컬럼명 또한 변경합니다."
      ],
      "metadata": {
        "id": "aY7mUnzOrUhv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pp_df = df2.rename(columns={'date':'날짜', 'day':'개전일', 'personnel':'사망자_수', 'personnel*':'불확실한_사망자', 'POW':'전쟁_포로'})\n",
        "pp_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "UGhgXfaSsXbL",
        "outputId": "b03c4cfc-b61f-4250-f71e-97fe6b843d91"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             날짜  개전일  사망자_수 불확실한_사망자  전쟁_포로\n",
              "0    2022-02-25    2   2800    about    0.0\n",
              "1    2022-02-26    3   4300    about    0.0\n",
              "2    2022-02-27    4   4500    about    0.0\n",
              "3    2022-02-28    5   5300    about    0.0\n",
              "4    2022-03-01    6   5710    about  200.0\n",
              "..          ...  ...    ...      ...    ...\n",
              "160  2022-08-04  162  41500    about    NaN\n",
              "161  2022-08-05  163  41650    about    NaN\n",
              "162  2022-08-06  164  41900    about    NaN\n",
              "163  2022-08-07  165  42200    about    NaN\n",
              "164  2022-08-08  166  42340    about    NaN\n",
              "\n",
              "[165 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6f776264-d1b1-4b29-bcc8-cc2b513baa6e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>날짜</th>\n",
              "      <th>개전일</th>\n",
              "      <th>사망자_수</th>\n",
              "      <th>불확실한_사망자</th>\n",
              "      <th>전쟁_포로</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-25</td>\n",
              "      <td>2</td>\n",
              "      <td>2800</td>\n",
              "      <td>about</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-02-26</td>\n",
              "      <td>3</td>\n",
              "      <td>4300</td>\n",
              "      <td>about</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-02-27</td>\n",
              "      <td>4</td>\n",
              "      <td>4500</td>\n",
              "      <td>about</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-02-28</td>\n",
              "      <td>5</td>\n",
              "      <td>5300</td>\n",
              "      <td>about</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-03-01</td>\n",
              "      <td>6</td>\n",
              "      <td>5710</td>\n",
              "      <td>about</td>\n",
              "      <td>200.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>2022-08-04</td>\n",
              "      <td>162</td>\n",
              "      <td>41500</td>\n",
              "      <td>about</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>2022-08-05</td>\n",
              "      <td>163</td>\n",
              "      <td>41650</td>\n",
              "      <td>about</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>2022-08-06</td>\n",
              "      <td>164</td>\n",
              "      <td>41900</td>\n",
              "      <td>about</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>2022-08-07</td>\n",
              "      <td>165</td>\n",
              "      <td>42200</td>\n",
              "      <td>about</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>2022-08-08</td>\n",
              "      <td>166</td>\n",
              "      <td>42340</td>\n",
              "      <td>about</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>165 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f776264-d1b1-4b29-bcc8-cc2b513baa6e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6f776264-d1b1-4b29-bcc8-cc2b513baa6e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6f776264-d1b1-4b29-bcc8-cc2b513baa6e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 데이터 정제 전 중요 사항.\n",
        "* 장비 및 인원의 손실수는 오직 러시아만 성립한다.\n"
      ],
      "metadata": {
        "id": "8fE96BuZqWwP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "참고하고 있는 url\n",
        "\n",
        "https://www.kaggle.com/datasets/piterfm/2022-ukraine-russian-war?select=russia_losses_personnel.csv <br>\n",
        "\n",
        "\n",
        "https://www.kaggle.com/datasets/piterfm/2022-ukraine-russian-war <br>\n",
        "\n",
        "\n",
        "https://www.kaggle.com/code/piterfm/ukraine-russia-war-daily-data?scriptVersionId=102179843 <br>\n"
      ],
      "metadata": {
        "id": "PTqv9-LZi27c"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "## Part. 1-2 일별 데이터 생성📅\n",
        "> 중복된 값들을 정제하여 일별 데이터를 생성합니다.\n"
      ],
      "metadata": {
        "id": "ZbqcNzMOuAf7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#데이터의 정보를 확인합니다.\n",
        "eq_df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4bx-WyrcwzMY",
        "outputId": "221da297-5b7d-479e-e7c9-b42ac7bb8547"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 165 entries, 0 to 164\n",
            "Data columns (total 18 columns):\n",
            " #   Column      Non-Null Count  Dtype  \n",
            "---  ------      --------------  -----  \n",
            " 0   날짜          165 non-null    object \n",
            " 1   개전일         165 non-null    int64  \n",
            " 2   항공기         165 non-null    int64  \n",
            " 3   헬리콥터        165 non-null    int64  \n",
            " 4   탱크          165 non-null    int64  \n",
            " 5   장갑차         165 non-null    int64  \n",
            " 6   야포          165 non-null    int64  \n",
            " 7   다중로켓발사기     165 non-null    int64  \n",
            " 8   자동화기기       65 non-null     float64\n",
            " 9   연료탱크        65 non-null     float64\n",
            " 10  드론          165 non-null    int64  \n",
            " 11  해군함정        165 non-null    int64  \n",
            " 12  방공포         165 non-null    int64  \n",
            " 13  특수_장비       146 non-null    float64\n",
            " 14  자동화_탄도_미사일  36 non-null     float64\n",
            " 15  피해가_큰_지역    106 non-null    object \n",
            " 16  탈것_및_연료탱크   100 non-null    float64\n",
            " 17  크루즈_미사일     100 non-null    float64\n",
            "dtypes: float64(6), int64(10), object(2)\n",
            "memory usage: 23.3+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pp_df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "apiivi7Xp14X",
        "outputId": "5cedfe71-f7d0-48e0-907e-a1f9702c0afb"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 165 entries, 0 to 164\n",
            "Data columns (total 5 columns):\n",
            " #   Column    Non-Null Count  Dtype  \n",
            "---  ------    --------------  -----  \n",
            " 0   날짜        165 non-null    object \n",
            " 1   개전일       165 non-null    int64  \n",
            " 2   사망자_수     165 non-null    int64  \n",
            " 3   불확실한_사망자  165 non-null    object \n",
            " 4   전쟁_포로     62 non-null     float64\n",
            "dtypes: float64(1), int64(2), object(2)\n",
            "memory usage: 6.6+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 날짜 데이터는 object 형태로 되어 있습니다.\n",
        "* datetime으로 변경합니다."
      ],
      "metadata": {
        "id": "cLnG-XjJxlGx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "eq_df['날짜'] = pd.to_datetime(eq_df['날짜']) \n",
        "pp_df['날짜'] = pd.to_datetime(eq_df['날짜'])"
      ],
      "metadata": {
        "id": "z0eokTFnpxI8"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "#### 특정 컬럼을 데이터의 인덱스로 지정합니다.\n",
        "* 두 개의 데이터의 모두 적용합니다.\n",
        "* 적용되는 부분은 다음과 같습니다.\n",
        "\n",
        "> 장비를 나타내는 데이터 : 날짜, 개전일, 피해가 큰 지역 <br/>\n",
        "\n",
        "> 전쟁중 일어난 사망인원을 나타낸 데이터 : 날짜, 개전일, 불분명한 사망자 수</br>"
      ],
      "metadata": {
        "id": "c9x7-wXIqPFv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 장비 데이터 인덱스 변환\n",
        "eq_df = eq_df.set_index(['날짜', '개전일','피해가_큰_지역'])"
      ],
      "metadata": {
        "id": "pujPuTLTrapY"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "eq_df = eq_df.diff().fillna(eq_df).fillna(0).astype(int).reset_index()"
      ],
      "metadata": {
        "id": "Y8THgzjHsCCj"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "eq_df.tail(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "y_pmi9Lc1EkF",
        "outputId": "c1b8671c-dfd2-47f2-dbf6-6030d230803f"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            날짜  개전일                            피해가_큰_지역  항공기  헬리콥터  탱크  장갑차  \\\n",
              "145 2022-07-20  147                             Bakhmut    1     0   9   13   \n",
              "146 2022-07-21  148                           Sloviansk    0     0   4    7   \n",
              "147 2022-07-22  149              Kryvyi Rih and Bakhmut    0     0   0    8   \n",
              "148 2022-07-23  150  Kramatorsk, Kryvyi Rih and Bakhmut    0     0   4    9   \n",
              "149 2022-07-24  151                          Kramatorsk    0     0  14   13   \n",
              "150 2022-07-25  152                          Kramatorsk    1     0   8    8   \n",
              "151 2022-07-26  153                             Bakhmut    0     1   7    9   \n",
              "152 2022-07-27  154                          Kryvyi Rih    0     1   1   12   \n",
              "153 2022-07-28  155                          Kryvyi Rih    0     0   4    8   \n",
              "154 2022-07-29  156                          Kryvyi Rih    0     0   7    8   \n",
              "155 2022-07-30  157                             Donetsk    0     0  10    8   \n",
              "156 2022-07-31  158                             Donetsk    1     0   4    9   \n",
              "157 2022-08-01  159              Donetsk and Kryvyi Rih    0     0   5    7   \n",
              "158 2022-08-02  160              Bakhmut and Kryvyi Rih    0     1   0    3   \n",
              "159 2022-08-03  161                 Bakhmut and Donetsk    0     0   6    8   \n",
              "160 2022-08-04  162                 Bakhmut and Donetsk    0     0  15    4   \n",
              "161 2022-08-05  163                             Donetsk    0     0   3    6   \n",
              "162 2022-08-06  164                             Donetsk    0     0  10   19   \n",
              "163 2022-08-07  165                             Donetsk    0     0   3    4   \n",
              "164 2022-08-08  166                             Donetsk    0     1   6   15   \n",
              "\n",
              "     야포  다중로켓발사기  자동화기기  연료탱크  드론  해군함정  방공포  특수_장비  자동화_탄도_미사일  탈것_및_연료탱크  \\\n",
              "145   5        2      0     0  10     0    0      0           0          8   \n",
              "146   3        1      0     0   7     0    0      2           0          6   \n",
              "147   4        0      0     0   3     0    0      0           0         22   \n",
              "148   1        2      0     0   1     0    0      0           0         17   \n",
              "149   5        2      0     0   0     0    0      1           0          3   \n",
              "150   7        2      0     0   5     0    3      0           0          9   \n",
              "151   4        1      0     0   3     0    1      2           0          3   \n",
              "152   3        0      0     0   4     0    0      0           0         12   \n",
              "153  11        0      0     0   3     0    0      0           0          7   \n",
              "154   6        0      0     0   2     0    0      2           0         16   \n",
              "155   6        0      0     0   2     0    0      1           0         19   \n",
              "156  10        1      0     0   2     0    0      2           0         13   \n",
              "157  16        0      0     0   1     0    0      2           0         10   \n",
              "158   4        0      0     0   3     0    0      0           0          2   \n",
              "159   3        0      0     0   1     0    1      1           0          8   \n",
              "160   7        1      0     0   2     0    0      0           0         38   \n",
              "161   4        0      0     0   0     0    5      0           0          4   \n",
              "162   5        0      0     0   2     0    4      2           0          6   \n",
              "163   3        0      0     0   6     0    5      1           0          8   \n",
              "164   2        1      0     0   4     0    0      0           0         15   \n",
              "\n",
              "     크루즈_미사일  \n",
              "145        0  \n",
              "146        0  \n",
              "147        0  \n",
              "148        0  \n",
              "149        3  \n",
              "150        4  \n",
              "151        0  \n",
              "152        0  \n",
              "153        0  \n",
              "154        0  \n",
              "155        0  \n",
              "156        0  \n",
              "157        0  \n",
              "158        0  \n",
              "159        6  \n",
              "160        2  \n",
              "161        0  \n",
              "162        0  \n",
              "163        0  \n",
              "164        0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d24cb907-568e-41ea-a1f1-74292365820e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>날짜</th>\n",
              "      <th>개전일</th>\n",
              "      <th>피해가_큰_지역</th>\n",
              "      <th>항공기</th>\n",
              "      <th>헬리콥터</th>\n",
              "      <th>탱크</th>\n",
              "      <th>장갑차</th>\n",
              "      <th>야포</th>\n",
              "      <th>다중로켓발사기</th>\n",
              "      <th>자동화기기</th>\n",
              "      <th>연료탱크</th>\n",
              "      <th>드론</th>\n",
              "      <th>해군함정</th>\n",
              "      <th>방공포</th>\n",
              "      <th>특수_장비</th>\n",
              "      <th>자동화_탄도_미사일</th>\n",
              "      <th>탈것_및_연료탱크</th>\n",
              "      <th>크루즈_미사일</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>2022-07-20</td>\n",
              "      <td>147</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>13</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>2022-07-21</td>\n",
              "      <td>148</td>\n",
              "      <td>Sloviansk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>147</th>\n",
              "      <td>2022-07-22</td>\n",
              "      <td>149</td>\n",
              "      <td>Kryvyi Rih and Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148</th>\n",
              "      <td>2022-07-23</td>\n",
              "      <td>150</td>\n",
              "      <td>Kramatorsk, Kryvyi Rih and Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>2022-07-24</td>\n",
              "      <td>151</td>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>13</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>150</th>\n",
              "      <td>2022-07-25</td>\n",
              "      <td>152</td>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>2022-07-26</td>\n",
              "      <td>153</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>152</th>\n",
              "      <td>2022-07-27</td>\n",
              "      <td>154</td>\n",
              "      <td>Kryvyi Rih</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>153</th>\n",
              "      <td>2022-07-28</td>\n",
              "      <td>155</td>\n",
              "      <td>Kryvyi Rih</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>154</th>\n",
              "      <td>2022-07-29</td>\n",
              "      <td>156</td>\n",
              "      <td>Kryvyi Rih</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>155</th>\n",
              "      <td>2022-07-30</td>\n",
              "      <td>157</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156</th>\n",
              "      <td>2022-07-31</td>\n",
              "      <td>158</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>9</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>2022-08-01</td>\n",
              "      <td>159</td>\n",
              "      <td>Donetsk and Kryvyi Rih</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>2022-08-02</td>\n",
              "      <td>160</td>\n",
              "      <td>Bakhmut and Kryvyi Rih</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>159</th>\n",
              "      <td>2022-08-03</td>\n",
              "      <td>161</td>\n",
              "      <td>Bakhmut and Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>2022-08-04</td>\n",
              "      <td>162</td>\n",
              "      <td>Bakhmut and Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>38</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>2022-08-05</td>\n",
              "      <td>163</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>2022-08-06</td>\n",
              "      <td>164</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>19</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>2022-08-07</td>\n",
              "      <td>165</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>2022-08-08</td>\n",
              "      <td>166</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>15</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d24cb907-568e-41ea-a1f1-74292365820e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d24cb907-568e-41ea-a1f1-74292365820e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d24cb907-568e-41ea-a1f1-74292365820e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pp_df = pp_df.set_index(['날짜', '개전일','불확실한_사망자'])\n",
        "pp_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "ztlOK2tl8dA9",
        "outputId": "fdc19b72-2789-4e90-e603-8de8a31ab7bd"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                         사망자_수  전쟁_포로\n",
              "날짜         개전일 불확실한_사망자              \n",
              "2022-02-25 2   about      2800    0.0\n",
              "2022-02-26 3   about      4300    0.0\n",
              "2022-02-27 4   about      4500    0.0\n",
              "2022-02-28 5   about      5300    0.0\n",
              "2022-03-01 6   about      5710  200.0\n",
              "...                        ...    ...\n",
              "2022-08-04 162 about     41500    NaN\n",
              "2022-08-05 163 about     41650    NaN\n",
              "2022-08-06 164 about     41900    NaN\n",
              "2022-08-07 165 about     42200    NaN\n",
              "2022-08-08 166 about     42340    NaN\n",
              "\n",
              "[165 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-92039fc1-31f0-46db-a79b-a4fdcc74a82b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>사망자_수</th>\n",
              "      <th>전쟁_포로</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>날짜</th>\n",
              "      <th>개전일</th>\n",
              "      <th>불확실한_사망자</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2022-02-25</th>\n",
              "      <th>2</th>\n",
              "      <th>about</th>\n",
              "      <td>2800</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-26</th>\n",
              "      <th>3</th>\n",
              "      <th>about</th>\n",
              "      <td>4300</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-27</th>\n",
              "      <th>4</th>\n",
              "      <th>about</th>\n",
              "      <td>4500</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-28</th>\n",
              "      <th>5</th>\n",
              "      <th>about</th>\n",
              "      <td>5300</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-01</th>\n",
              "      <th>6</th>\n",
              "      <th>about</th>\n",
              "      <td>5710</td>\n",
              "      <td>200.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-08-04</th>\n",
              "      <th>162</th>\n",
              "      <th>about</th>\n",
              "      <td>41500</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-08-05</th>\n",
              "      <th>163</th>\n",
              "      <th>about</th>\n",
              "      <td>41650</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-08-06</th>\n",
              "      <th>164</th>\n",
              "      <th>about</th>\n",
              "      <td>41900</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-08-07</th>\n",
              "      <th>165</th>\n",
              "      <th>about</th>\n",
              "      <td>42200</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-08-08</th>\n",
              "      <th>166</th>\n",
              "      <th>about</th>\n",
              "      <td>42340</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>165 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92039fc1-31f0-46db-a79b-a4fdcc74a82b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-92039fc1-31f0-46db-a79b-a4fdcc74a82b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-92039fc1-31f0-46db-a79b-a4fdcc74a82b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pp_df = pp_df.diff().fillna(pp_df).fillna(0).astype(int).reset_index()\n",
        "pp_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "PjjGjeH3-DEV",
        "outputId": "b565a95f-c994-4614-cee4-6a59dba34906"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            날짜  개전일 불확실한_사망자  사망자_수  전쟁_포로\n",
              "0   2022-02-25    2    about   2800      0\n",
              "1   2022-02-26    3    about   1500      0\n",
              "2   2022-02-27    4    about    200      0\n",
              "3   2022-02-28    5    about    800      0\n",
              "4   2022-03-01    6    about    410    200\n",
              "..         ...  ...      ...    ...    ...\n",
              "160 2022-08-04  162    about    150      0\n",
              "161 2022-08-05  163    about    150      0\n",
              "162 2022-08-06  164    about    250      0\n",
              "163 2022-08-07  165    about    300      0\n",
              "164 2022-08-08  166    about    140      0\n",
              "\n",
              "[165 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f4ff2756-743c-49a2-a753-c67624f32cd8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>날짜</th>\n",
              "      <th>개전일</th>\n",
              "      <th>불확실한_사망자</th>\n",
              "      <th>사망자_수</th>\n",
              "      <th>전쟁_포로</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-25</td>\n",
              "      <td>2</td>\n",
              "      <td>about</td>\n",
              "      <td>2800</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-02-26</td>\n",
              "      <td>3</td>\n",
              "      <td>about</td>\n",
              "      <td>1500</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-02-27</td>\n",
              "      <td>4</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-02-28</td>\n",
              "      <td>5</td>\n",
              "      <td>about</td>\n",
              "      <td>800</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-03-01</td>\n",
              "      <td>6</td>\n",
              "      <td>about</td>\n",
              "      <td>410</td>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>2022-08-04</td>\n",
              "      <td>162</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>2022-08-05</td>\n",
              "      <td>163</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>2022-08-06</td>\n",
              "      <td>164</td>\n",
              "      <td>about</td>\n",
              "      <td>250</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>2022-08-07</td>\n",
              "      <td>165</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>2022-08-08</td>\n",
              "      <td>166</td>\n",
              "      <td>about</td>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>165 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f4ff2756-743c-49a2-a753-c67624f32cd8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f4ff2756-743c-49a2-a753-c67624f32cd8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f4ff2756-743c-49a2-a753-c67624f32cd8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "#### 일별 데이터 사용 : 일별의 드론 파괴 개수\n"
      ],
      "metadata": {
        "id": "zl2qGfEr_sZk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "from  matplotlib import dates #날짜를 정교하게 표기하기 위함\n",
        "from dateutil.relativedelta import relativedelta\n",
        "\n",
        "\n",
        "# 시각화 자료 : \n",
        "fig_author = 'Jin Young'\n",
        "\n",
        "\n",
        "# 날짜 시간 변경하기\n",
        "fig_date = pd.Timestamp('today').date()\n",
        "\n",
        "\n",
        "# 기간\n",
        "period_months = 2\n",
        "\n",
        "# 살펴볼 컬럼 지정\n",
        "column_equipment = '드론'\n",
        "column_date = '날짜'\n"
      ],
      "metadata": {
        "id": "FS_NFcbZ_z1X"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 살펴볼 구간만 지정하여 데이터 출력.\n",
        "df_ = eq_df[[column_date, column_equipment]]\n",
        "\n",
        "# 마지막 행 : 날짜\n",
        "date_last = df_.iloc[-1][column_date]\n",
        "\n",
        "#날짜 계산\n",
        "date_first = date_last - relativedelta(months=+period_months)"
      ],
      "metadata": {
        "id": "12mHKQQsWWvO"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "####참고🎇\n",
        "* \n",
        "\n",
        "```timedelta``` 에서 month를 계산하는 방식이 없으므로,\n",
        "```relativedelta``` 함수를 이용하여 계산한다.\n",
        "\n",
        "\n",
        "\n",
        "```\n",
        "#아래와 같은 형식이 지원되지 않는다.\n",
        "# month_before = (datetime.strptime(target_date, '%Y-%m-%d') - timedelta(months = 1)).strftime('%Y-%m-%d') \n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "MKEXciQbZq1C"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "date_first"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aVWUh9Fo6UoM",
        "outputId": "efbeff01-a6dd-4f5f-f11a-1f424d659010"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Timestamp('2022-06-08 00:00:00')"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# date_first의 값은 다음과 같습니다.\n",
        "# Timestamp('2022-06-08 00:00:00')\n",
        "\n",
        "\n",
        "#기준점 날짜 'date_first'를 계산하여\n",
        "df_ = df_[df_[column_date]>date_first].copy()\n",
        "\n",
        "\n",
        "# 각 데이터 컬럼별 리스트화\n",
        "label_list = df_[column_date]\n",
        "number_list = df_[column_equipment]"
      ],
      "metadata": {
        "id": "Wn20XYtmXaAN"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 각 데이터 컬럼별 리스트화\n",
        "\n",
        "# 1. 날짜\n",
        "label_list = df_[column_date]\n",
        "\n",
        "# 2. 확인하고 싶은 장비\n",
        "number_list = df_[column_equipment]"
      ],
      "metadata": {
        "id": "iMWA6_O_8Oe0"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 데이터 시각화\n",
        "\n",
        "fig = plt.figure(figsize=(21,7), dpi=300)\n",
        "ax = fig.add_subplot()\n",
        "ax.bar(label_list, number_list)\n",
        "\n",
        "xx =''\n",
        "\n",
        "for patch in ax.patches:\n",
        "  xx = ax.text(\n",
        "      patch.get_x()+patch.get_width()/2,\n",
        "      patch.get_height()+0.1,\n",
        "      patch.get_height() if patch.get_height() !=0 else'',\n",
        "      ha = 'center',\n",
        "      fontsize=12\n",
        "  )\n",
        "\n",
        "\n",
        "#눈금 레이블 및 눈금선의 모양 변경 => tick_params\n",
        "ax.tick_params(axis = 'x', labelrotation=90)\n",
        "\n",
        "\n",
        "# 눈금 표시기의 위치 설정\n",
        "ax.xaxis.set_major_locator(dates.DayLocator(interval=2))\n",
        "\n",
        "\n",
        "# 각 눈금레이블을  그릴지에 대한 여부이다.(parameter = labelleft)\n",
        "ax.tick_params(labelleft=False)\n",
        "\n",
        "\n",
        "# 눈금 위치 설정 (parameter= left, right, both, default, none)\n",
        "# none 및 both는 레이블이 아닌 눈금에만 영향을 줍니다.\n",
        "# none : 두 위치의 눈금, 왼쪽의 레이블, 틱을 원하지 않을 때 사용합니다.\n",
        "# both : 눈금이 두 위치에 모두 나타나도록 사용하지만, 눈금 레이블은 변경하지 않습니다.\n",
        "ax.yaxis.set_ticks_position('none')\n",
        "\n",
        "\n",
        "# ax.spines : 데이터 플롯 영역을 제한하는 선이다, 상황에 따라 일부를 제거하거나, 색상을 변경하거나, 보이지 않게 또는 너비/스타일 조절 등이 가능...\n",
        "# ax.spines[원하는위치]\n",
        "# set_visible (가시성 설정)\n",
        "ax.spines['top'].set_visible(False)\n",
        "ax.spines['left'].set_visible(False)\n",
        "ax.spines['right'].set_visible(False)\n",
        "\n",
        "\n",
        "# 텍스트 추가\n",
        "# 2022년 06월 08일부터 2022 08월 09일까지 파괴된 드론의 수 (러시아)\n",
        "total_drone = df_['드론'].sum()\n",
        "\n",
        "\n",
        "# 표에서 나타난 개전일\n",
        "early = df_.at[104,'날짜']\n",
        "\n",
        "\n",
        "# 날짜\n",
        "latest = df_.at[164,'날짜']\n",
        "\n",
        "\n",
        "# 총 개전일 \n",
        "period = (latest - early).days\n",
        "\n",
        "\n",
        "# pyplot으로 주석을 나타내는 annotate를 사용해보기. \n",
        "ax.annotate(f'Created by{fig_author, fig_date}', xy=(0.8, 0.85), xycoords = 'figure fraction')\n",
        "ax.annotate(f'Days of war : {period}', xy=(0.8, 0.82), xycoords = 'figure fraction')\n",
        "ax.annotate(f'total_drone : {total_drone}', xy=(0.8, 0.8), xycoords = 'figure fraction')\n",
        "ax.annotate(f'Average number of destroyed drone : {total_drone / period }',xy=(0.8, 0.78),xycoords = 'figure fraction')\n",
        "\n",
        "\n",
        "# 제목\n",
        "plt.title(f'Armed Forces of Ukraine in action, russian drone losses',fontsize=20)\n",
        "\n",
        "\n",
        "# tight_layout() : 서브플롯 사이 패딩 값 조정\n",
        "plt.tight_layout()\n",
        "\n",
        "\n",
        "# savefig 현재 그림 저장\n",
        "# plt.savefig('{}.png'.format(column_equipment))\n",
        "\n",
        "\n",
        "#출력 \n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "zGXQPEo941ox",
        "outputId": "3edf3851-8f0e-45ba-ac87-542ff57288af"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 6300x2100 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "## Part 2. 데이터 분석\n",
        "> 주어진 데이터를 최대한 이용하여 데이터를 분석하도록 합니다."
      ],
      "metadata": {
        "id": "axW_ECezmwpg"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Part 2-1 . 🔍 피해가 가장 큰 지역은 어디일까요?\n",
        "> 가장 큰 피해를 입은 지역의 장비 파괴 개수를 살펴보면 알 수 있을  것 같습니다.\n",
        "전투가 격렬한만큼, 피해 및 부상에 대한 개수가 확연하게 많이 드러날 것 입니다."
      ],
      "metadata": {
        "id": "qi7xXWtj4M39"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 가장 많은 피해를 입은 도시 및 가장 피해가 적은 지역을 찾아봅시다.\n",
        "# 파괴된 장비의 총 개수가 가장 많은 지역 및 가장 적은 지역을 찾아봅시다.\n",
        "# 새로운 컬럼을 추가합니다.  - 파괴된 장비의 총 개수\n",
        "eq_df['파괴된_장비의_총_개수'] = eq_df[eq_df.columns.difference(['날짜','개전일','피해가_큰_지역'])].sum(axis=1)\n",
        "\n",
        "\n",
        "#새로운 데이터를 생성합니다.\n",
        "region_df = eq_df[['파괴된_장비의_총_개수','피해가_큰_지역']].sort_values(by='파괴된_장비의_총_개수', ascending = False)\n",
        "\n",
        "\n",
        "# grouby를 통하여 도시별 평균값 구하기\n",
        "region_df.groupby('피해가_큰_지역').mean().sort_values(by='파괴된_장비의_총_개수', ascending = False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "T2L9mgg9-SGC",
        "outputId": "7740414b-afc0-478f-c2ec-09a0700ef256"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                             파괴된_장비의_총_개수\n",
              "피해가_큰_지역                                                 \n",
              "Izyum                                          473.000000\n",
              "Popasna                                        125.000000\n",
              "Zaporizhzhia and Izyum                         123.000000\n",
              "Izyum, Novopavlivsk                            115.000000\n",
              "Novopavlivsk, Kurakhove and Sievierodonetsk    103.000000\n",
              "Novopavlivsk                                    96.000000\n",
              "Sievierodonetsk                                 95.333333\n",
              "Lyman and Kurakhove                             94.000000\n",
              "Kurakhove and Izyum                             89.000000\n",
              "Sloviansk, Kryvyi Rih and Zaporizhzhia          84.500000\n",
              "Kurakhove                                       77.666667\n",
              "Slobozhanskyi                                   73.000000\n",
              "Bakhmut and Avdiivka                            72.000000\n",
              "Lyman and Zaporizhzhia                          68.000000\n",
              "Kurakhove and Avdiivka                          65.000000\n",
              "Kryvyi Rih and Zaporizhzhia                     65.000000\n",
              "Kharkiv and Bakhmut                             62.000000\n",
              "Kryvyi Rih and Bakhmut                          56.500000\n",
              "Avdiivka                                        56.000000\n",
              "Bakhmut and Sievierodonetsk                     53.000000\n",
              "Bakhmut and Donetsk                             51.500000\n",
              "Zaporizhzhia                                    51.000000\n",
              "Bakhmut and Kurakhove                           50.333333\n",
              "Bakhmut and Zaporizhzhia                        46.333333\n",
              "Sloviansk, Bakhmut and Kryvyi Rih               45.000000\n",
              "Sievierodonetsk and Bakhmut                     44.500000\n",
              "Bakhmut                                         42.041667\n",
              "Avdiivka and Bakhmut                            42.000000\n",
              "Sloviansk                                       42.000000\n",
              "Kramatorsk                                      41.875000\n",
              "Donetsk and Kryvyi Rih                          41.000000\n",
              "Sloviansk and Donetsk                           39.666667\n",
              "Lyman                                           39.000000\n",
              "Donetsk                                         38.666667\n",
              "Kryvyi Rih                                      35.666667\n",
              "Kramatorsk, Kryvyi Rih and Bakhmut              34.000000\n",
              "Avdiivka and Kryvyi Rih                         33.000000\n",
              "Sloviansk, Bakhmut and Avdiivka                 20.000000\n",
              "Sloviansk and Bakhmut                           19.000000\n",
              "Kramatorsk and Bakhmut                          19.000000\n",
              "Bakhmut and Kryvyi Rih                          13.000000\n",
              "Mykolaiv                                        10.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-78402efb-9792-4c58-8473-943b4c52577a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>파괴된_장비의_총_개수</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>피해가_큰_지역</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Izyum</th>\n",
              "      <td>473.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Popasna</th>\n",
              "      <td>125.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Zaporizhzhia and Izyum</th>\n",
              "      <td>123.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Izyum, Novopavlivsk</th>\n",
              "      <td>115.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Novopavlivsk, Kurakhove and Sievierodonetsk</th>\n",
              "      <td>103.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Novopavlivsk</th>\n",
              "      <td>96.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sievierodonetsk</th>\n",
              "      <td>95.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lyman and Kurakhove</th>\n",
              "      <td>94.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kurakhove and Izyum</th>\n",
              "      <td>89.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sloviansk, Kryvyi Rih and Zaporizhzhia</th>\n",
              "      <td>84.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kurakhove</th>\n",
              "      <td>77.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Slobozhanskyi</th>\n",
              "      <td>73.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bakhmut and Avdiivka</th>\n",
              "      <td>72.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lyman and Zaporizhzhia</th>\n",
              "      <td>68.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kurakhove and Avdiivka</th>\n",
              "      <td>65.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kryvyi Rih and Zaporizhzhia</th>\n",
              "      <td>65.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kharkiv and Bakhmut</th>\n",
              "      <td>62.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kryvyi Rih and Bakhmut</th>\n",
              "      <td>56.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Avdiivka</th>\n",
              "      <td>56.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bakhmut and Sievierodonetsk</th>\n",
              "      <td>53.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bakhmut and Donetsk</th>\n",
              "      <td>51.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Zaporizhzhia</th>\n",
              "      <td>51.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bakhmut and Kurakhove</th>\n",
              "      <td>50.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bakhmut and Zaporizhzhia</th>\n",
              "      <td>46.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sloviansk, Bakhmut and Kryvyi Rih</th>\n",
              "      <td>45.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sievierodonetsk and Bakhmut</th>\n",
              "      <td>44.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bakhmut</th>\n",
              "      <td>42.041667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Avdiivka and Bakhmut</th>\n",
              "      <td>42.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sloviansk</th>\n",
              "      <td>42.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kramatorsk</th>\n",
              "      <td>41.875000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Donetsk and Kryvyi Rih</th>\n",
              "      <td>41.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sloviansk and Donetsk</th>\n",
              "      <td>39.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lyman</th>\n",
              "      <td>39.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Donetsk</th>\n",
              "      <td>38.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kryvyi Rih</th>\n",
              "      <td>35.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kramatorsk, Kryvyi Rih and Bakhmut</th>\n",
              "      <td>34.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Avdiivka and Kryvyi Rih</th>\n",
              "      <td>33.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sloviansk, Bakhmut and Avdiivka</th>\n",
              "      <td>20.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sloviansk and Bakhmut</th>\n",
              "      <td>19.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kramatorsk and Bakhmut</th>\n",
              "      <td>19.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bakhmut and Kryvyi Rih</th>\n",
              "      <td>13.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mykolaiv</th>\n",
              "      <td>10.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78402efb-9792-4c58-8473-943b4c52577a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-78402efb-9792-4c58-8473-943b4c52577a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-78402efb-9792-4c58-8473-943b4c52577a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 🗺가장 많은 피해를 입은 지역과, 가장 적은 피해를 입은 지역을 시각화합니다."
      ],
      "metadata": {
        "id": "InhKqHjw_LW0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 시각화 표현 : 현재 침략 당하고 있는 국가\n",
        "\n",
        "# 시각화에 필요한 라이브러리 선언.\n",
        "\n",
        "import folium as F\n",
        "\n",
        "# 우크라이나 위도 표시 \n",
        "ukraine_lat = 48.383022\n",
        "\n",
        "# 우크라이나 경도 표시  \n",
        "ukraine_long = 31.1828699\n",
        "\n",
        "urkraine_map = F.Map(location = [ukraine_lat, ukraine_long], tiles = 'Stamen Terrain', zoom_start = 6.49) \n",
        "\n",
        "# F.Map : 파라미터\n",
        "# zoom_start (int, default 10) - 맵의 초기 확대 및 축소 수준.\n",
        "# tiles - 타일, 초기 수준\n",
        "\n",
        "\n",
        "# FeatureGroup() :  하나의 레이어에 포함하여 단일 레이어로 처리합니다. \n",
        "Izyum = F.map.FeatureGroup()\n",
        "\n",
        "\n",
        "# Izyum 위도 : 49.209\n",
        "Izyum_lat = 49.208889\n",
        "\n",
        "# Izyum 경도 : 37.248\n",
        "Izyum_long = 37.248611\n",
        "\n",
        "# add_child : 처음, 지도에 '자식 객체'를 추가하고, 이 후 두번 째 맵에 저장한다.\n",
        "Izyum.add_child(F.features.CircleMarker([Izyum_lat, Izyum_long], radius=5, color= 'blue', fill_color = 'blue'))\n",
        "\n",
        "\n",
        "# urkraine_map의 지도 또한 Izyum의 객체에 포함시킨다.\n",
        "urkraine_map.add_child(Izyum)\n",
        "\n",
        "# 시각화 - 마커 표기\n",
        "# add_to : 미리 만들어놓은 변수에 내용 추가\n",
        "F.Marker([Izyum_lat, Izyum_long], popup = 'the most damaged city').add_to(urkraine_map)\n",
        "\n",
        "\n",
        "\n",
        "# 피해가 적은 지역 또한 지도에 표기합니다.\n",
        "# 피해가 적은 지역 - Mykolaiv\n",
        "\n",
        "Mykolaiv = F.map.FeatureGroup()\n",
        "\n",
        "# 위도 49.523611\n",
        "Mykolaiv_lat = 49.523611\n",
        "\n",
        "# 경도 23.985278\n",
        "Mykolaiv_long = 23.985278\n",
        "\n",
        "Mykolaiv.add_child(F.features.CircleMarker([Mykolaiv_lat, Mykolaiv_long], radius=5, color='blue', fill_color='blue'))\n",
        "urkraine_map.add_child(Mykolaiv)\n",
        "\n",
        "F.Marker([Mykolaiv_lat, Mykolaiv_long], popup='the least affected city').add_to(urkraine_map)\n",
        "\n",
        "\n",
        "\n",
        "# 러시아: 모스크바 (Moscow)\n",
        "Moscow = F.map.FeatureGroup()\n",
        "# 위도 : 55.75\n",
        "Moscow_lat = 55.75\n",
        "\n",
        "# 경도 : 37.616667\n",
        "Moscow_long = 37.616667\n",
        "\n",
        "Moscow.add_child(F.features.CircleMarker([Moscow_lat, Moscow_long], radius=5, color ='red', fill_color='red'))\n",
        "urkraine_map.add_child(Moscow)\n",
        "\n",
        "F.Marker([Moscow_lat,Moscow_long], popup='aggression country').add_to(urkraine_map)\n",
        "\n",
        "\n",
        "# PolyLine 생성\n",
        "# 모스크바를 기준으로 각각 도시에 대하여 Line을 생성합니다.\n",
        "Line_1 = [[Mykolaiv_lat, Mykolaiv_long],[Moscow_lat, Moscow_long]]\n",
        "Line_2 = [[Izyum_lat, Izyum_long], [Moscow_lat, Moscow_long]]\n",
        "\n",
        "# Mykolaiv 에서 Moscow\n",
        "F.PolyLine(locations = Line_1, popup='Mykolaiv : 1,374.3Km' ,tooltip='Mykolaiv : 1,374.3Km').add_to(urkraine_map)\n",
        "\n",
        "# Izyum 에서 Moscow\n",
        "F.PolyLine(locations = Line_2,popup='Izyum : 860.7Km',  tooltip='Izyum : 860.7Km').add_to(urkraine_map)\n",
        "urkraine_map"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 685
        },
        "id": "kIZGofDFBJU7",
        "outputId": "39d67b58-75c3-47d7-9aeb-ac0b87495727"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<folium.folium.Map at 0x7f6aebd6cf50>"
            ],
            "text/html": [
              "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n",
              "&lt;head&gt;    \n",
              "    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n",
              "    \n",
              "        &lt;script&gt;\n",
              "            L_NO_TOUCH = false;\n",
              "            L_DISABLE_3D = false;\n",
              "        &lt;/script&gt;\n",
              "    \n",
              "    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n",
              "    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n",
              "    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.6.0/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.6.0/dist/leaflet.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n",
              "    \n",
              "            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n",
              "                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n",
              "            &lt;style&gt;\n",
              "                #map_7d7317d60e92437a27a059f7a1461307 {\n",
              "                    position: relative;\n",
              "                    width: 100.0%;\n",
              "                    height: 100.0%;\n",
              "                    left: 0.0%;\n",
              "                    top: 0.0%;\n",
              "                }\n",
              "            &lt;/style&gt;\n",
              "        \n",
              "&lt;/head&gt;\n",
              "&lt;body&gt;    \n",
              "    \n",
              "            &lt;div class=&quot;folium-map&quot; id=&quot;map_7d7317d60e92437a27a059f7a1461307&quot; &gt;&lt;/div&gt;\n",
              "        \n",
              "&lt;/body&gt;\n",
              "&lt;script&gt;    \n",
              "    \n",
              "            var map_7d7317d60e92437a27a059f7a1461307 = L.map(\n",
              "                &quot;map_7d7317d60e92437a27a059f7a1461307&quot;,\n",
              "                {\n",
              "                    center: [48.383022, 31.1828699],\n",
              "                    crs: L.CRS.EPSG3857,\n",
              "                    zoom: 6.49,\n",
              "                    zoomControl: true,\n",
              "                    preferCanvas: false,\n",
              "                }\n",
              "            );\n",
              "\n",
              "            \n",
              "\n",
              "        \n",
              "    \n",
              "            var tile_layer_786105d2d21800468c8687807990d059 = L.tileLayer(\n",
              "                &quot;https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.jpg&quot;,\n",
              "                {&quot;attribution&quot;: &quot;Map tiles by \\u003ca href=\\&quot;http://stamen.com\\&quot;\\u003eStamen Design\\u003c/a\\u003e, under \\u003ca href=\\&quot;http://creativecommons.org/licenses/by/3.0\\&quot;\\u003eCC BY 3.0\\u003c/a\\u003e. Data by \\u0026copy; \\u003ca href=\\&quot;http://openstreetmap.org\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e, under \\u003ca href=\\&quot;http://creativecommons.org/licenses/by-sa/3.0\\&quot;\\u003eCC BY SA\\u003c/a\\u003e.&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n",
              "            ).addTo(map_7d7317d60e92437a27a059f7a1461307);\n",
              "        \n",
              "    \n",
              "            var feature_group_f061c685f1764d089a4f027794acc973 = L.featureGroup(\n",
              "                {}\n",
              "            ).addTo(map_7d7317d60e92437a27a059f7a1461307);\n",
              "        \n",
              "    \n",
              "            var circle_marker_ab579d6b20cd9b9aafec5e327044560a = L.circleMarker(\n",
              "                [49.208889, 37.248611],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 5, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(feature_group_f061c685f1764d089a4f027794acc973);\n",
              "        \n",
              "    \n",
              "            var marker_3900beff143fcb2a096f8b308145af6c = L.marker(\n",
              "                [49.208889, 37.248611],\n",
              "                {}\n",
              "            ).addTo(map_7d7317d60e92437a27a059f7a1461307);\n",
              "        \n",
              "    \n",
              "        var popup_489f34e8b094f3d1e6c318b5383b49e2 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            var html_07e9ef0ad7603adc436a9c20b1af948a = $(`&lt;div id=&quot;html_07e9ef0ad7603adc436a9c20b1af948a&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;the most damaged city&lt;/div&gt;`)[0];\n",
              "            popup_489f34e8b094f3d1e6c318b5383b49e2.setContent(html_07e9ef0ad7603adc436a9c20b1af948a);\n",
              "        \n",
              "\n",
              "        marker_3900beff143fcb2a096f8b308145af6c.bindPopup(popup_489f34e8b094f3d1e6c318b5383b49e2)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var feature_group_50cc3924709b40e9ccc9de9187a91caa = L.featureGroup(\n",
              "                {}\n",
              "            ).addTo(map_7d7317d60e92437a27a059f7a1461307);\n",
              "        \n",
              "    \n",
              "            var circle_marker_6e3f25cbc21a5856cf2dfcf9feb18a8b = L.circleMarker(\n",
              "                [49.523611, 23.985278],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 5, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(feature_group_50cc3924709b40e9ccc9de9187a91caa);\n",
              "        \n",
              "    \n",
              "            var marker_ba703024298160848961ed31f53fbe40 = L.marker(\n",
              "                [49.523611, 23.985278],\n",
              "                {}\n",
              "            ).addTo(map_7d7317d60e92437a27a059f7a1461307);\n",
              "        \n",
              "    \n",
              "        var popup_ed71b605671c3b37f291af0cc38e4b32 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            var html_569f76edb80c3fe6ecfc7fd7410a07be = $(`&lt;div id=&quot;html_569f76edb80c3fe6ecfc7fd7410a07be&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;the least affected city&lt;/div&gt;`)[0];\n",
              "            popup_ed71b605671c3b37f291af0cc38e4b32.setContent(html_569f76edb80c3fe6ecfc7fd7410a07be);\n",
              "        \n",
              "\n",
              "        marker_ba703024298160848961ed31f53fbe40.bindPopup(popup_ed71b605671c3b37f291af0cc38e4b32)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var feature_group_a3ef61e18f3e99a00ae80f1982f9bb6f = L.featureGroup(\n",
              "                {}\n",
              "            ).addTo(map_7d7317d60e92437a27a059f7a1461307);\n",
              "        \n",
              "    \n",
              "            var circle_marker_6fb5a12b6d8d655c07e05f82e726ce23 = L.circleMarker(\n",
              "                [55.75, 37.616667],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 5, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(feature_group_a3ef61e18f3e99a00ae80f1982f9bb6f);\n",
              "        \n",
              "    \n",
              "            var marker_4278722db18415dc85fd40d5d7932dd1 = L.marker(\n",
              "                [55.75, 37.616667],\n",
              "                {}\n",
              "            ).addTo(map_7d7317d60e92437a27a059f7a1461307);\n",
              "        \n",
              "    \n",
              "        var popup_deb8a43000719c572aa3edfaeb6aa5da = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            var html_917ef55dc6475a9e58118c14bac619d8 = $(`&lt;div id=&quot;html_917ef55dc6475a9e58118c14bac619d8&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;aggression country&lt;/div&gt;`)[0];\n",
              "            popup_deb8a43000719c572aa3edfaeb6aa5da.setContent(html_917ef55dc6475a9e58118c14bac619d8);\n",
              "        \n",
              "\n",
              "        marker_4278722db18415dc85fd40d5d7932dd1.bindPopup(popup_deb8a43000719c572aa3edfaeb6aa5da)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var poly_line_7d7191aa9feb1c01973f6464c62aea4e = L.polyline(\n",
              "                [[49.523611, 23.985278], [55.75, 37.616667]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;#3388ff&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;#3388ff&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 1.0, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_7d7317d60e92437a27a059f7a1461307);\n",
              "        \n",
              "    \n",
              "        var popup_df40ba37777610a5fa99013d8ec3a289 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            var html_0f727d0487a574dfa82f514f3b4a7f0f = $(`&lt;div id=&quot;html_0f727d0487a574dfa82f514f3b4a7f0f&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Mykolaiv : 1,374.3Km&lt;/div&gt;`)[0];\n",
              "            popup_df40ba37777610a5fa99013d8ec3a289.setContent(html_0f727d0487a574dfa82f514f3b4a7f0f);\n",
              "        \n",
              "\n",
              "        poly_line_7d7191aa9feb1c01973f6464c62aea4e.bindPopup(popup_df40ba37777610a5fa99013d8ec3a289)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            poly_line_7d7191aa9feb1c01973f6464c62aea4e.bindTooltip(\n",
              "                `&lt;div&gt;\n",
              "                     Mykolaiv : 1,374.3Km\n",
              "                 &lt;/div&gt;`,\n",
              "                {&quot;sticky&quot;: true}\n",
              "            );\n",
              "        \n",
              "    \n",
              "            var poly_line_a431ffa9089e2008d5459b71b7205350 = L.polyline(\n",
              "                [[49.208889, 37.248611], [55.75, 37.616667]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;#3388ff&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;#3388ff&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 1.0, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_7d7317d60e92437a27a059f7a1461307);\n",
              "        \n",
              "    \n",
              "        var popup_c758f20dd90fdd60860778d88789b0b7 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            var html_970124b413bbefa2efe05dc0363cd058 = $(`&lt;div id=&quot;html_970124b413bbefa2efe05dc0363cd058&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Izyum : 860.7Km&lt;/div&gt;`)[0];\n",
              "            popup_c758f20dd90fdd60860778d88789b0b7.setContent(html_970124b413bbefa2efe05dc0363cd058);\n",
              "        \n",
              "\n",
              "        poly_line_a431ffa9089e2008d5459b71b7205350.bindPopup(popup_c758f20dd90fdd60860778d88789b0b7)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            poly_line_a431ffa9089e2008d5459b71b7205350.bindTooltip(\n",
              "                `&lt;div&gt;\n",
              "                     Izyum : 860.7Km\n",
              "                 &lt;/div&gt;`,\n",
              "                {&quot;sticky&quot;: true}\n",
              "            );\n",
              "        \n",
              "&lt;/script&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 새롭게 생성된 데이터 'region_df'에 나와있는 모든 지역에 대하여 거리를 입력 합니다.\n",
        "# 새로운 컬럼을 생성합니다.\n",
        "\n",
        "import copy\n",
        "region_df['모스크바로부터의_거리(km)'] = region_df['피해가_큰_지역'].copy()\n",
        "\n",
        "# 특정 조건을 만족할 시 값 변경\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Izyum', '모스크바로부터의_거리(km)'] = 860.7   \n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Sievierodonetsk', '모스크바로부터의_거리(km)'] = 1024.2\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Popasna', '모스크바로부터의_거리(km)'] = 1067.7  \n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Zaporizhzhia', '모스크바로부터의_거리(km)'] = 1038.8\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Novopavlivsk', '모스크바로부터의_거리(km)'] = 1613\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Kurakhove', '모스크바로부터의_거리(km)'] = 1052\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Sloviansk', '모스크바로부터의_거리(km)'] = 911\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Kryvyi Rih', '모스크바로부터의_거리(km)'] = 1104\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Lyman', '모스크바로부터의_거리(km)'] = 946\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Avdiivka', '모스크바로부터의_거리(km)'] = 1030\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Kramatorsk', '모스크바로부터의_거리(km)'] = 930\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Slobozhanskyi', '모스크바로부터의_거리(km)'] = 785\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Donetsk', '모스크바로부터의_거리(km)'] = 1236\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Mykolaiv', '모스크바로부터의_거리(km)'] = 1374\n",
        "region_df.loc[region_df['모스크바로부터의_거리(km)'] == 'Bakhmut', '모스크바로부터의_거리(km)'] = 1087\n",
        "\n",
        "\n",
        "region_df['모스크바로부터의_거리(km)'].unique()\n",
        "\n",
        "\n",
        "# 피해가 큰 지역에 대하여 결측값 채워넣기.\n",
        "region_df.fillna('Unable to verify', inplace=True)\n",
        "\n",
        "\n",
        "# 결측치를 채워넣은 컬럼의 값 확인하기. \n",
        "# region_df['피해가 큰 지역'].unique() \n",
        "\n",
        "\n",
        "\n",
        "# Unable to verify 을 가지고 있는 행 제외\n",
        "index_drop = region_df[region_df['피해가_큰_지역'] == 'Unable to verify'].index #print(index_drop)\n",
        "drop_index_df = region_df.drop(index_drop)\n",
        "\n",
        "\n",
        "# 피해가 큰 지역이 두 군데로 나와있는 경우 또한 제외한다.\n",
        "index_drop_str = region_df[region_df['모스크바로부터의_거리(km)'] == str].index #print(index_drop)\n",
        "drop_index_df = drop_index_df.drop(index_drop_str)\n",
        "drop_index_df\n",
        "\n",
        "\n",
        "# row 생략 없이 출력\n",
        "pd.set_option('display.max_rows', None)\n",
        "# col 생략 없이 출력\n",
        "pd.set_option('display.max_columns', None) \n",
        "\n",
        "\n",
        "drop_index_df.reset_index(drop= True, inplace = True)\n",
        "drop_index_df\n",
        "\n",
        "\n",
        "# 최종\n",
        "index_number = [5,6,7,8,10,11,17,18,19,22,23,25,26,28,29,32,41,44,49,51,53,57,58,62,65,73,77,78,79,82,83,88,92,89,98,99,100,103]\n",
        "final_drop = drop_index_df.drop(index_number)\n",
        "final_drop \n",
        "\n",
        "\n",
        "# 데이터 정렬\n",
        "sort_df = final_drop.groupby(['피해가_큰_지역','모스크바로부터의_거리(km)']).mean()\n",
        "sort_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 551
        },
        "id": "h_cSaOYFBXrq",
        "outputId": "3d065dba-db22-4819-84ee-97f04fb9dbff"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                 파괴된_장비의_총_개수\n",
              "피해가_큰_지역        모스크바로부터의_거리(km)              \n",
              "Avdiivka        1030.0              56.000000\n",
              "Bakhmut         1087.0              42.041667\n",
              "Donetsk         1236.0              40.400000\n",
              "Izyum           860.7              473.000000\n",
              "Kramatorsk      930.0               41.875000\n",
              "Kryvyi Rih      1104.0              35.666667\n",
              "Kurakhove       1052.0              77.666667\n",
              "Lyman           946.0               39.000000\n",
              "Mykolaiv        1374.0              10.000000\n",
              "Novopavlivsk    1613.0              96.000000\n",
              "Popasna         1067.7             125.000000\n",
              "Sievierodonetsk 1024.2              95.333333\n",
              "Slobozhanskyi   785.0               73.000000\n",
              "Sloviansk       911.0               42.000000\n",
              "Zaporizhzhia    1038.8              51.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-db3fe91f-abe7-46df-b664-faec570b916e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>파괴된_장비의_총_개수</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>피해가_큰_지역</th>\n",
              "      <th>모스크바로부터의_거리(km)</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Avdiivka</th>\n",
              "      <th>1030.0</th>\n",
              "      <td>56.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bakhmut</th>\n",
              "      <th>1087.0</th>\n",
              "      <td>42.041667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Donetsk</th>\n",
              "      <th>1236.0</th>\n",
              "      <td>40.400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Izyum</th>\n",
              "      <th>860.7</th>\n",
              "      <td>473.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kramatorsk</th>\n",
              "      <th>930.0</th>\n",
              "      <td>41.875000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kryvyi Rih</th>\n",
              "      <th>1104.0</th>\n",
              "      <td>35.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kurakhove</th>\n",
              "      <th>1052.0</th>\n",
              "      <td>77.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lyman</th>\n",
              "      <th>946.0</th>\n",
              "      <td>39.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mykolaiv</th>\n",
              "      <th>1374.0</th>\n",
              "      <td>10.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Novopavlivsk</th>\n",
              "      <th>1613.0</th>\n",
              "      <td>96.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Popasna</th>\n",
              "      <th>1067.7</th>\n",
              "      <td>125.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sievierodonetsk</th>\n",
              "      <th>1024.2</th>\n",
              "      <td>95.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Slobozhanskyi</th>\n",
              "      <th>785.0</th>\n",
              "      <td>73.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sloviansk</th>\n",
              "      <th>911.0</th>\n",
              "      <td>42.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Zaporizhzhia</th>\n",
              "      <th>1038.8</th>\n",
              "      <td>51.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db3fe91f-abe7-46df-b664-faec570b916e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-db3fe91f-abe7-46df-b664-faec570b916e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-db3fe91f-abe7-46df-b664-faec570b916e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 데이터 정렬\n",
        "sort_df.sort_values(by=['모스크바로부터의_거리(km)'], ascending= False, inplace= True)\n",
        "sort_df = sort_df.reset_index()\n",
        "\n",
        "\n",
        "import plotly.express as px\n",
        "\n",
        "\n",
        "# 시각화\n",
        "fig = px.bar(sort_df, x='피해가_큰_지역', y='파괴된_장비의_총_개수',\n",
        "             hover_data = ['모스크바로부터의_거리(km)'])\n",
        "\n",
        "\n",
        "fig.update_layout(title = '<b> 거리에 따른 각 지역의 파괴량 </b>')\n",
        "\n",
        "\n",
        "fig.show(renderer='colab')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "_kypB3OinvPQ",
        "outputId": "caec725d-3cfe-4251-e504-e7cfc76a214c"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"f7e144db-a267-4389-b8a2-9837c34283d1\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"f7e144db-a267-4389-b8a2-9837c34283d1\")) {                    Plotly.newPlot(                        \"f7e144db-a267-4389-b8a2-9837c34283d1\",                        [{\"alignmentgroup\":\"True\",\"customdata\":[[1613.0],[1374.0],[1236.0],[1104.0],[1087.0],[1067.7],[1052.0],[1038.8],[1030.0],[1024.2],[946.0],[930.0],[911.0],[860.7],[785.0]],\"hovertemplate\":\"\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed=%{x}<br>\\ud30c\\uad34\\ub41c_\\uc7a5\\ube44\\uc758_\\ucd1d_\\uac1c\\uc218=%{y}<br>\\ubaa8\\uc2a4\\ud06c\\ubc14\\ub85c\\ubd80\\ud130\\uc758_\\uac70\\ub9ac(km)=%{customdata[0]}<extra></extra>\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"textposition\":\"auto\",\"x\":[\"Novopavlivsk\",\"Mykolaiv\",\"Donetsk\",\"Kryvyi Rih\",\"Bakhmut\",\"Popasna\",\"Kurakhove\",\"Zaporizhzhia\",\"Avdiivka\",\"Sievierodonetsk\",\"Lyman\",\"Kramatorsk\",\"Sloviansk\",\"Izyum\",\"Slobozhanskyi\"],\"xaxis\":\"x\",\"y\":[96.0,10.0,40.4,35.666666666666664,42.041666666666664,125.0,77.66666666666667,51.0,56.0,95.33333333333333,39.0,41.875,42.0,473.0,73.0],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"\\ud30c\\uad34\\ub41c_\\uc7a5\\ube44\\uc758_\\ucd1d_\\uac1c\\uc218\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\",\"title\":{\"text\":\"<b> \\uac70\\ub9ac\\uc5d0 \\ub530\\ub978 \\uac01 \\uc9c0\\uc5ed\\uc758 \\ud30c\\uad34\\ub7c9 </b>\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('f7e144db-a267-4389-b8a2-9837c34283d1');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Part 2-2. 상관관계 분석.\n",
        "지역에 '거리'에 따라 '파괴된_장비의_총_개수'는 차이가 있다.<br/>\n",
        "지역에 '거리'에 따라 '파괴된_장비의_총_ 개수'는 차이가 없다.<br/>\n",
        "\n",
        "\n",
        "> '거리' 및 '파괴된_장비의_총_개수'는 모두 연속형 변수입니다.<br/>\n",
        "* 상관분석 or 회귀분석을 진행하여 알아봅시다."
      ],
      "metadata": {
        "id": "6JpxE8GSCX3L"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "####   ⬛참고⬛  **상관분석 or 상관관계 분석**\n",
        "은 두 변수간의 어떤 선형적 관계를 가지는지 분석하는 기법으로 상관계수를 이용하여 측정하는 방법입니다.\n",
        "\n",
        "\n",
        "* 장점\n",
        "  - A,B 가 Positive correltaion 이란 사실은 알 수 있습니다.\n",
        "\n",
        "* 단점\n",
        "  - A의 증가가 원인이 되어 B가 증가하는지, B가 증가하는 것이 원인이 되어 A가 증가하는지는 알 수 없습니다.\n",
        "\n"
      ],
      "metadata": {
        "id": "UcIRa9GGKstg"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "🔰따라서 원인과 결과에 대한 분석이 필요하다면, 상관분석이 아닌 회귀 분석을 진행해야합니다. <br/>\n",
        "\n"
      ],
      "metadata": {
        "id": "xgUV9dRfNhiY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "----\n",
        "#### Part 2-2-1.\n",
        ">상관 관계(=상관 계수)는 두 변수 간 어떤 선형적 관계를 가지는지 분석하는 상관분석을 통해 도출된다.\n",
        "\n",
        "**상관분석**은 아래 4가지 기본 과정을 거쳐야 합니다.\n",
        "* 선형성\n",
        "  - X,Y의 관계가 직선적인지 알아보는 것. (분포도를 나타내는 산점도를 통해 확인가능)\n",
        "\n",
        "* 동변량성\n",
        "  - X의 값과 관계없이 Y의 산포도가 같은 것을 의미.\n",
        "\n",
        "\n",
        "* 두 변수의 정규 분포성\n",
        "  - 두 변수의 측정치 분포가 모집단에서 모두 정규분포를 이루는 것이다.\n",
        "  정규분포란, 2개의 매개 변수 평균$(mu)$과 표준편차$(σ)$에 의해 모양이 결정되고,\n",
        "  이때의 분포를 $N(μ,σ^2 )$ 으로 표기합니다.\n",
        "\n",
        "\n",
        "* 무선 독립 표본\n",
        "  - 모집단에서 표본을 추출할 때 표본대상이 확률적으로 선정된다\n"
      ],
      "metadata": {
        "id": "lQ_DE5h1Mbc_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "이러한 기본 가정하에 두 변수는 독립적이거나 상관된 관계일 수 있다.<br/>\n",
        "이 두 관계의 상도를 상관계수로 표현하는데, 수치의 단위로 모 상관계수는 $p$, 표본 상관계수로 $r$로 표기한다. <br/>\n",
        "\n",
        "\n",
        "❗하지만, 위에서 언급한 것처럼, 상관계수는 두 변수의 연관정도를 표현한 것이며,\n",
        "인과관계를 설명할 수 있는 것은 아니다.\n",
        "* 인과관계는 회귀분석을 통해 해당 관계의 방향과 정도, 그리고 적용할 수학적 모델을 추정할 수 있다.\n",
        "\n",
        "* 상관분석의 종류는 단순, 다중, 편 상관 분석이 존재한다. \n",
        "\n",
        "\n",
        "https://aliencoder.tistory.com/13\n",
        "\n"
      ],
      "metadata": {
        "id": "tPmzP-vjTISE"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "####🔅 상관관계 분석 : 피어슨 상관관계 분석을 진행합니다. \n",
        "r값은  x,y가 완전 동일하다면 1, 전혀 다르다면 0, 반대 방향으로 완전하게 동일하면 -1의 값을 같습니다. "
      ],
      "metadata": {
        "id": "k00ojdagVUAp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sort_df.head(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "AuZCQBmBXRE9",
        "outputId": "94505885-5b44-4ede-b490-0b59fa74446f"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       피해가_큰_지역  모스크바로부터의_거리(km)  파괴된_장비의_총_개수\n",
              "0  Novopavlivsk           1613.0          96.0\n",
              "1      Mykolaiv           1374.0          10.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d0ec4fa5-c6f2-4809-bf3c-a9cbd9c77869\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>피해가_큰_지역</th>\n",
              "      <th>모스크바로부터의_거리(km)</th>\n",
              "      <th>파괴된_장비의_총_개수</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Novopavlivsk</td>\n",
              "      <td>1613.0</td>\n",
              "      <td>96.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Mykolaiv</td>\n",
              "      <td>1374.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0ec4fa5-c6f2-4809-bf3c-a9cbd9c77869')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d0ec4fa5-c6f2-4809-bf3c-a9cbd9c77869 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d0ec4fa5-c6f2-4809-bf3c-a9cbd9c77869');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#인덱스 초기화\n",
        "sort_df.reset_index(inplace = True)\n",
        "\n",
        "# 인덱스 지정\n",
        "sort_df.set_index(['피해가_큰_지역'], inplace = True, drop =True)"
      ],
      "metadata": {
        "id": "vq4V4S7bMrD1"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 1. 산점도 파악 : 두 변수에 대한 관계를 시각적으로 파악.\n",
        "\n",
        "X = sort_df['모스크바로부터의_거리(km)'].values\n",
        "Y = sort_df['파괴된_장비의_총_개수'].values\n",
        "\n",
        "# 한글깨짐 방지 폰트 지정 matplotlib.\n",
        "plt.rc('font', family='NanumBarunGothic') \n",
        "plt.show()\n",
        "\n",
        "plt.scatter(X, Y, alpha=0.5)\n",
        "plt.title('거리에 따른 장비파괴수')\n",
        "plt.xlabel('거리(단위 : km)')\n",
        "plt.ylabel('파괴된_장비의_총_개수')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "id": "NBJ-XXbcWl0Y",
        "outputId": "879f0021-fba9-431f-d3b6-202d7e2036ad"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "결과 : 산점도만으로 쉽게 유추할 수 없음. <br/>\n",
        "Why? : 데이터 자체가 불명확한 느낌 및 데이터의 부족으로 인한 결과라고 생각하게 됨."
      ],
      "metadata": {
        "id": "vsA1HTroUqnm"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 공분산 및 상관계수\n",
        "> 산점도를 이용하면 두 변수간의 직선적인 관계를 대략적으로 파악이 가능하지만, 두 변수 사이의 관계를 어떠한 수치로 표현하지 않는다.\n",
        "\n",
        "  - 두 변수간의 관계를 수치로 표현하기 위해 공분산 및 상관계수를 이용한다.\n"
      ],
      "metadata": {
        "id": "zaKj04DVWMQ6"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**✅ 공분산이란?**<br/>\n",
        "2개의 확률변수의 상관정도를 나태는 값으로, 만약 2개의 변수중 하나의 값이\n",
        "상승하는 경향을 보일 때, 다른 값도 상승하면 공분산의 값은 양수, 반대로\n",
        "다른 값이 하강하는 경향을 보이면 공분산의 값은 음수가 나온다."
      ],
      "metadata": {
        "id": "SSZO3P_-Zi7a"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "np.cov(X,Y)[0,1]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7kvgrc-UZtzM",
        "outputId": "d633357d-0a77-4e7d-f8db-8329dcbb6a00"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-6005.356753968252"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**🤔 하지만, 이것으로는 부족합니다 ❗❗**\n",
        "> 공분산 자체는 상관관계의 상승 혹은 하강하는 경향을 이해할 수 있지만, \n",
        "2개의 변수 측정 단위의 크기에 따라 값이 달라지므로, 절대적 강도를 파악하기에는 한계가 존재합니다.\n",
        "\n",
        "* 즉, **$-6005.XXXXX.....$라는 숫자가 어느정도의 음의 상관관계인지를 가늠하기가 쉽지 않습니다.**\n",
        "\n",
        "* 그래서 **공분산을 표준화 시킨 상관계수를 보다 많이 이용**합니다. \n"
      ],
      "metadata": {
        "id": "v7eOYUG7ZzbF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#corrcoef() 함수를 이용하기.\n",
        "np.corrcoef(X,Y)[0,1]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u8p7aj_ca03V",
        "outputId": "cd97b6e3-c8c2-415d-a6fe-1385ebe372d6"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-0.26010875869254735"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "🧐상관계수는 -1에서 1사이의 값을 가지며, 0인 경우에는 선형관계가 전혀 없음을 의미합니다.<br/>\n",
        "\n",
        "> 현재 우리가 계산한 상관계수의 값은  -0.26....입니다.<br/>\n",
        "이 것은 한 변수가 증가할 때 다른 변수는 감소하는 경향을 띕니다.\n",
        "\n",
        "다시 말해, **'거리' 와 '장비파괴량'둘 사이의 관계에서 한 변수가 증가한다면, 다른 변수는 낮아집니다.**\n",
        "\n",
        "https://sunnyyanolza.tistory.com/42"
      ],
      "metadata": {
        "id": "jELNW4pZbG7P"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**❗주의할 점❗** <br/>\n",
        "Pearson 상관계수는 극단 데이터의 영향을 상당히 많이 받습니다..<br/>\n",
        "데이터의 집합에 나머지 값들과 매우 다른 값들이 존재한다면, 상관계수의 값이 크게 변경될 수 있습니다.<br/>\n",
        "\n",
        "\n",
        "💥산점도에서 극단적으로 값이 튀는 부분은 **'Izyum'** 라는 지역의 장비파괴량 값이었습니다."
      ],
      "metadata": {
        "id": "CB2rkHOHAzxC"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Part 2-2-2 이상치로 판단해야할까요....?\n",
        ">이상치 : 관측된 데이터의 범위에서 많이 벗어난 아주 작은 값이나 큰 값\n",
        "\n",
        "✔ 이상치 원인\n",
        "* 데이터 수집 중 실수\n",
        "* 측정 과정에서의 오류 \n",
        "  - ex) 몸무게 측정시, 100번의 시행 중 한 번 이상 영점 조정을 하지 않고 측정한 경우\n",
        "* 실험 조건 차이의 오류 \n",
        "  - ex) 이전과의 측정과 조건이 다른 경우\n",
        "* 데이터 마이닝시, 처리하고 조합시 생기는 오류"
      ],
      "metadata": {
        "id": "caWC6WJjC9KX"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "🤨 현 데이터는, 장비의 파괴량을 그대로 수집하여 기록하였으며,<br/>\n",
        "지역의 특성 및 규모에 등의 다양한 원인으로 장비의 파괴량이 충분히 다를 수 있다. <br/>\n",
        "그러므로 의도와 과정이 맞는 데이터라고 간주하겠습니다. <br>\n",
        "\n",
        "https://dacon.io/forum/405933"
      ],
      "metadata": {
        "id": "aaCBbfofDbmA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 상관계수의 검정\n",
        ">'상관계수 값 자체가 유의미한가?'를 검정할 수도 있습니다.\n",
        "\n",
        "* 보통 p-value를 많이 이용합니다.\n",
        "  - scipy 패키지의 stats.pearsonr() 을 이용하면 상관계수와 p-value를 동시에 얻을 수 있습니다.\n",
        "  "
      ],
      "metadata": {
        "id": "8jJUJ4LXCmZO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import scipy.stats as stats\n",
        "stats.pearsonr(X,Y)\n",
        "\n",
        "# Ho : 거리와 파괴량의 상관 관계는 존재한다.\n",
        "# Ha : 거리와 파괴량의 상관 관계는 존재하지 않는다."
      ],
      "metadata": {
        "id": "0XIc1pefM4hw",
        "outputId": "43e6573d-5a23-447f-fe6a-bf4ddbba7df4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(-0.2601087586925474, 0.3491408158358652)"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### p-value의 값이 0.05보다 큰 값이므로, 'Ho : 귀무가설'을 그대로 채택합니다."
      ],
      "metadata": {
        "id": "3hCmVBzRNAh2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "##PART. 3 도시별 파괴된 장비량의 차이 : manova test\n",
        "> 또 다른 가설을 세워 증명하고, 해답을 찾길 원합니다.<br/>\n",
        " 장비를 탑승장비 및 전략장비로 나누고, 탑승 장비에 따른 가설을 증명하고 시각화해봅시다.\n",
        "\n",
        "* **Ho** : 도시별 탑승 장비별 파괴량의 차이는 존재하지 않는다.\n",
        "* **Ha** : 도시별 탑승 장비별 파괴량의 차이는 존재한다.\n",
        "\n",
        "**🚙 탑승장비**\n",
        "* 항공기, 헬리콥터, 탱크, 장갑차,해군함정, 탈것 및 연료탱크\n",
        "\n",
        "**😼 전략무기**\n",
        "* 야포, 다중로켓발사기, 자동화기기, 연료탱크, 드론, 방공포, 특수 장비, 자동화 탄도 미사일, 크루즈 미사일\n",
        "\n",
        "> **독립변수** : 러시아(모스크바로)로부터 각각 도시까지의 거리( Kurakhove, Bakhmut, Zaporizhzhia.....* 단위: km) <br>\n",
        "**종속변수** : 각 도시별 바괴된 장비 (항공기, 헬리콥터, 탱크, 장갑차.....) \n",
        "\n",
        "\n",
        "* 참고 : anova 테스트에서 **독립변수**에는 <U>범주형 변수</U>,  **종속변수**는 <U>연속형 변수</U>여야 한다.\n"
      ],
      "metadata": {
        "id": "cRYoanHQOGMZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 탑승 장비를 살펴보기 위한 데이터를 따로 구성 및 정제합니다.\n",
        "\n",
        "\n",
        "# eq_df, pp_df 합성하기.\n",
        "merge_df = pd.merge(eq_df, pp_df, on = ['날짜','개전일'])\n",
        "\n",
        "\n",
        "#필요하지 않는 컬럼 제거\n",
        "theory_df_01 = merge_df.drop(['날짜', '개전일', '파괴된_장비의_총_개수'], axis =1)\n",
        "\n",
        "\n",
        "columns_vehicle = ['항공기', '헬리콥터', '탱크', '장갑차','해군함정','탈것_및_연료탱크']\n",
        "columns_strategy = ['야포', '다중로켓발사기','자동화기기', '연료탱크', '드론', '방공포', '특수_장비', '자동화_탄도_미사일', '크루즈_미사일']\n",
        "\n",
        "\n",
        "theory_df_01 = theory_df_01.drop(columns_strategy, axis = 1)\n",
        "\n",
        "\n",
        "# 피해가 큰 지역에 대하여 결측값 채워넣기.\n",
        "theory_df_01.fillna('Unable to verify', inplace=True)\n",
        "\n",
        "# 두 개 이상의 지역을 나타내는 데이터 제거.\n",
        "# 두 개 이상의 지역을 나타내는 데이터의 인덱스 번호(리스트 생성)\n",
        "\n",
        "# 지역이름이 2개 이상인 지역 제외.\n",
        "index_number = [61, 62, 68, 70, 75, 79, 80, 81, 82, 83, 92, 95, 96, 105, 106, 107, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 128, 129, 130, 131, 132, 147, 148, 157, 158, 159, 160]\n",
        "\n",
        "# 인덱스 제거 \n",
        "drop_index = theory_df_01.drop(index_number, inplace = True)\n",
        "drop_index\n",
        "\n",
        "\n",
        "# Unable to verify 을 가지고 있는 행 제외\n",
        "index_drop = theory_df_01[theory_df_01['피해가_큰_지역'] == 'Unable to verify'].index #print(index_drop)\n",
        "modified_df = theory_df_01.drop(index_drop)\n",
        "\n",
        "modified_df"
      ],
      "metadata": {
        "id": "0Mi19FlrO1NY",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "3b35d940-91fe-46b8-ff82-97ea9664d4bd"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            피해가_큰_지역  항공기  헬리콥터  탱크  장갑차  해군함정  탈것_및_연료탱크 불확실한_사망자  사망자_수  \\\n",
              "59   Sievierodonetsk    2     0  11   20     0          0    about    100   \n",
              "60   Sievierodonetsk    3     0  34   50     0          0    about    200   \n",
              "63             Izyum    2     0  16   29     0          0    about    200   \n",
              "64             Izyum    1     0  22   27     0          0    about    200   \n",
              "65             Izyum    2     0  18   26     0       1796    about    300   \n",
              "66             Izyum    2     0  22   48     0         28    about    300   \n",
              "67             Izyum    0     0  14   48     2         19    about    400   \n",
              "69           Popasna    2     0  15   41     0         40    about    200   \n",
              "71     Slobozhanskyi    0     0  12   27     0          8    about    200   \n",
              "72      Novopavlivsk    0     1   8   28     1         27    about    400   \n",
              "73          Avdiivka    0     2  15   23     0          9    about    150   \n",
              "74          Avdiivka    0     0  25   44     0         10    about    350   \n",
              "76         Kurakhove    0     1   8   17     1         22    about    300   \n",
              "77         Kurakhove    1     1  10   27     0         23    about    250   \n",
              "78         Kurakhove    0     1  13   34     0         17    about    300   \n",
              "84           Bakhmut    1     1   9   27     0          5    about    200   \n",
              "85           Bakhmut    0     1  15   26     0         16    about    150   \n",
              "86           Bakhmut    0     1   7   25     0         16    about    200   \n",
              "87           Bakhmut    0     0   8   25     0         12    about    150   \n",
              "88   Sievierodonetsk    1     0   9   28     0          7    about    150   \n",
              "89             Lyman    1     0   3   19     0          4    about    100   \n",
              "90          Avdiivka    0     0  10   22     0          8    about    150   \n",
              "91          Avdiivka    0     0   7   11     0          1    about    150   \n",
              "93           Bakhmut    0     0   8   12     0         14    about    150   \n",
              "94      Zaporizhzhia    0     0  11   12     0         18    about    200   \n",
              "97           Bakhmut    2     0   2   11     0         35    about    150   \n",
              "98           Bakhmut    0     0   4   12     0          4    about    100   \n",
              "99      Zaporizhzhia    0     0   9   13     0          8    about    100   \n",
              "100          Bakhmut    0     0   5   13     0         23    about    100   \n",
              "101        Sloviansk    1     1   5    8     0         35    about    100   \n",
              "102        Sloviansk    1     1   4   16     0         10    about    110   \n",
              "103        Sloviansk    0     1   3   13     0          1    about    140   \n",
              "104          Bakhmut    0     0   5    9     0         15    about    200   \n",
              "108          Bakhmut    1     0   2    8     0          5    about    150   \n",
              "109          Bakhmut    0     1   2   11     0         13    about    200   \n",
              "111          Bakhmut    0     0   9   17     0          9    about    200   \n",
              "112          Bakhmut    2     1   7   18     0          2    about    200   \n",
              "118          Bakhmut    0     1   8   18     0          5    about    200   \n",
              "123          Bakhmut    0     1  15   17     0         14    about    250   \n",
              "124          Bakhmut    0     0   5   16     0          9    about    200   \n",
              "125          Bakhmut    0     0   1    6     0          4    about    150   \n",
              "126          Bakhmut    0     1   4   10     1          8    about    150   \n",
              "127          Bakhmut    0     0   5    1     0          4    about    120   \n",
              "133       Kramatorsk    0     0  35   14     0         20    about    250   \n",
              "134       Kramatorsk    0     0   1    4     0          2    about    300   \n",
              "135       Kramatorsk    0     1   3    8     0          7    about    100   \n",
              "136         Avdiivka    0     0   4    5     0          2    about    100   \n",
              "137         Mykolaiv    0     0   4    1     0          3    about     70   \n",
              "138         Mykolaiv    0     0   0    3     0          5    about    100   \n",
              "139       Kramatorsk    2     0  18    0     0         16    about    300   \n",
              "140       Kramatorsk    1     0   5   34     0         11    about    130   \n",
              "141          Bakhmut    0     0   5    8     0          4    about    140   \n",
              "142          Bakhmut    0     0   7    5     0         11    about    160   \n",
              "143          Bakhmut    0     0   3    7     0          7    about    150   \n",
              "144       Kramatorsk    0     0   4    6     0         14    about    100   \n",
              "145          Bakhmut    1     0   9   13     0          8    about    200   \n",
              "146        Sloviansk    0     0   4    7     0          6    about    100   \n",
              "149       Kramatorsk    0     0  14   13     0          3    about    280   \n",
              "150       Kramatorsk    1     0   8    8     0          9    about    180   \n",
              "151          Bakhmut    0     1   7    9     0          3    about    170   \n",
              "152       Kryvyi Rih    0     1   1   12     0         12    about    200   \n",
              "153       Kryvyi Rih    0     0   4    8     0          7    about    160   \n",
              "154       Kryvyi Rih    0     0   7    8     0         16    about    270   \n",
              "155          Donetsk    0     0  10    8     0         19    about    170   \n",
              "156          Donetsk    1     0   4    9     0         13    about    160   \n",
              "161          Donetsk    0     0   3    6     0          4    about    150   \n",
              "162          Donetsk    0     0  10   19     0          6    about    250   \n",
              "163          Donetsk    0     0   3    4     0          8    about    300   \n",
              "164          Donetsk    0     1   6   15     0         15    about    140   \n",
              "\n",
              "     전쟁_포로  \n",
              "59       0  \n",
              "60       0  \n",
              "63       0  \n",
              "64       0  \n",
              "65       0  \n",
              "66       0  \n",
              "67       0  \n",
              "69       0  \n",
              "71       0  \n",
              "72       0  \n",
              "73       0  \n",
              "74       0  \n",
              "76       0  \n",
              "77       0  \n",
              "78       0  \n",
              "84       0  \n",
              "85       0  \n",
              "86       0  \n",
              "87       0  \n",
              "88       0  \n",
              "89       0  \n",
              "90       0  \n",
              "91       0  \n",
              "93       0  \n",
              "94       0  \n",
              "97       0  \n",
              "98       0  \n",
              "99       0  \n",
              "100      0  \n",
              "101      0  \n",
              "102      0  \n",
              "103      0  \n",
              "104      0  \n",
              "108      0  \n",
              "109      0  \n",
              "111      0  \n",
              "112      0  \n",
              "118      0  \n",
              "123      0  \n",
              "124      0  \n",
              "125      0  \n",
              "126      0  \n",
              "127      0  \n",
              "133      0  \n",
              "134      0  \n",
              "135      0  \n",
              "136      0  \n",
              "137      0  \n",
              "138      0  \n",
              "139      0  \n",
              "140      0  \n",
              "141      0  \n",
              "142      0  \n",
              "143      0  \n",
              "144      0  \n",
              "145      0  \n",
              "146      0  \n",
              "149      0  \n",
              "150      0  \n",
              "151      0  \n",
              "152      0  \n",
              "153      0  \n",
              "154      0  \n",
              "155      0  \n",
              "156      0  \n",
              "161      0  \n",
              "162      0  \n",
              "163      0  \n",
              "164      0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a04d86e7-ca18-44e4-9bc9-4366ee1dff2d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>피해가_큰_지역</th>\n",
              "      <th>항공기</th>\n",
              "      <th>헬리콥터</th>\n",
              "      <th>탱크</th>\n",
              "      <th>장갑차</th>\n",
              "      <th>해군함정</th>\n",
              "      <th>탈것_및_연료탱크</th>\n",
              "      <th>불확실한_사망자</th>\n",
              "      <th>사망자_수</th>\n",
              "      <th>전쟁_포로</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>Sievierodonetsk</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>20</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>Sievierodonetsk</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>50</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>Izyum</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>64</th>\n",
              "      <td>Izyum</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Izyum</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>1796</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66</th>\n",
              "      <td>Izyum</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>48</td>\n",
              "      <td>0</td>\n",
              "      <td>28</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>Izyum</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>48</td>\n",
              "      <td>2</td>\n",
              "      <td>19</td>\n",
              "      <td>about</td>\n",
              "      <td>400</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>Popasna</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>Slobozhanskyi</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>72</th>\n",
              "      <td>Novopavlivsk</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>28</td>\n",
              "      <td>1</td>\n",
              "      <td>27</td>\n",
              "      <td>about</td>\n",
              "      <td>400</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>Avdiivka</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>15</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>Avdiivka</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>44</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>about</td>\n",
              "      <td>350</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>76</th>\n",
              "      <td>Kurakhove</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>17</td>\n",
              "      <td>1</td>\n",
              "      <td>22</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>Kurakhove</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>10</td>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>23</td>\n",
              "      <td>about</td>\n",
              "      <td>250</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Kurakhove</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>13</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>17</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>85</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88</th>\n",
              "      <td>Sievierodonetsk</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>Lyman</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90</th>\n",
              "      <td>Avdiivka</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>Avdiivka</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>Zaporizhzhia</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>35</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>Zaporizhzhia</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>23</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>Sloviansk</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>35</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>Sloviansk</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>about</td>\n",
              "      <td>110</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>Sloviansk</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>about</td>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>109</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>123</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>about</td>\n",
              "      <td>250</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>126</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>about</td>\n",
              "      <td>120</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>35</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>about</td>\n",
              "      <td>250</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>Avdiivka</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>Mykolaiv</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>about</td>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>138</th>\n",
              "      <td>Mykolaiv</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>139</th>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>140</th>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>about</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>141</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>about</td>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>142</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>about</td>\n",
              "      <td>160</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>143</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>Sloviansk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>about</td>\n",
              "      <td>280</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>150</th>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>about</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>about</td>\n",
              "      <td>170</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>152</th>\n",
              "      <td>Kryvyi Rih</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>153</th>\n",
              "      <td>Kryvyi Rih</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>about</td>\n",
              "      <td>160</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>154</th>\n",
              "      <td>Kryvyi Rih</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>about</td>\n",
              "      <td>270</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>155</th>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>19</td>\n",
              "      <td>about</td>\n",
              "      <td>170</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156</th>\n",
              "      <td>Donetsk</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>about</td>\n",
              "      <td>160</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>about</td>\n",
              "      <td>250</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>about</td>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a04d86e7-ca18-44e4-9bc9-4366ee1dff2d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a04d86e7-ca18-44e4-9bc9-4366ee1dff2d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a04d86e7-ca18-44e4-9bc9-4366ee1dff2d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 필요한 라이브러리 불러오기.\n",
        "\n",
        "import statsmodels.api as sm\n",
        "from statsmodels.formula.api import ols\n",
        "from statsmodels.multivariate.manova import MANOVA\n",
        "from statsmodels.stats.multicomp import pairwise_tukeyhsd"
      ],
      "metadata": {
        "id": "Dhk-1RxkTasx"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "maov = MANOVA.from_formula('항공기 + 헬리콥터 + 탱크 + 장갑차 + 해군함정 + 탈것_및_연료탱크 ~ 피해가_큰_지역', data = modified_df)\n",
        "print(maov.mv_test())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ovCv_RVcQvVG",
        "outputId": "0ace12d7-70aa-4576-b7f1-49ff650bdd8d"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                  Multivariate linear model\n",
            "==============================================================\n",
            "                                                              \n",
            "--------------------------------------------------------------\n",
            "         Intercept        Value  Num DF  Den DF F Value Pr > F\n",
            "--------------------------------------------------------------\n",
            "            Wilks' lambda 0.6022 6.0000 49.0000  5.3943 0.0002\n",
            "           Pillai's trace 0.3978 6.0000 49.0000  5.3943 0.0002\n",
            "   Hotelling-Lawley trace 0.6605 6.0000 49.0000  5.3943 0.0002\n",
            "      Roy's greatest root 0.6605 6.0000 49.0000  5.3943 0.0002\n",
            "--------------------------------------------------------------\n",
            "                                                              \n",
            "--------------------------------------------------------------\n",
            "        피해가_큰_지역        Value   Num DF  Den DF  F Value Pr > F\n",
            "--------------------------------------------------------------\n",
            "          Wilks' lambda 0.0960 84.0000 279.4875  1.7391 0.0005\n",
            "         Pillai's trace 1.6533 84.0000 324.0000  1.4671 0.0100\n",
            " Hotelling-Lawley trace 3.8114 84.0000 177.1221  2.1569 0.0000\n",
            "    Roy's greatest root 2.5658 14.0000  54.0000  9.8968 0.0000\n",
            "==============================================================\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "####Part 3 manova-t의 결과 \n",
        "* P - value 값을 나타내는 Pr > F의 값이 0.05보다 낮다면 귀무가설을 버리고, 대립가설을 선택한다.\n",
        "\n",
        "**💥즉, 도시별 '탑승 장비' <u>파괴량은 차이가 있다.</u>**"
      ],
      "metadata": {
        "id": "P5Nqn4_URCvx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**주의할 점 ❗**\n",
        ">Manova - test 에서 멈춘다면, 어떠한 지역이 이 가설에 영향을 미치는지 정확하게 알 수 없다.\n",
        "\n",
        "* One-way Anova - test를 진행하여 개별적 요소를 살펴보자. \n",
        " "
      ],
      "metadata": {
        "id": "laGMNNorUMr9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Part. 3-1 파괴량 차이에 영향을 주는 지역 찾기.\n"
      ],
      "metadata": {
        "id": "hzAJTJizRHLa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 항공기\n",
        "aircraft =  ols('항공기~피해가_큰_지역', data = modified_df).fit()\n",
        "aov_air = sm.stats.anova_lm(aircraft, type = 2)\n",
        "print('OLS :항공기 & 피해가 큰 지역')\n",
        "print(aov_air)\n",
        "print('\\n')\n",
        "\n",
        "\n",
        "\n",
        "# 헬리콥터\n",
        "helicopter =  ols('헬리콥터~피해가_큰_지역', data = modified_df).fit()\n",
        "aov_air = sm.stats.anova_lm(helicopter, type = 2)\n",
        "print('OLS :헬리콥터 & 피해가 큰 지역')\n",
        "print(aov_air)\n",
        "print('\\n')\n",
        "\n",
        "\n",
        "#탱크\n",
        "tank =  ols('탱크~피해가_큰_지역', data = modified_df).fit()\n",
        "aov_air = sm.stats.anova_lm(tank, type = 2)\n",
        "print('OLS :탱크 & 피해가 큰 지역')\n",
        "print(aov_air)\n",
        "print('\\n')\n",
        "\n",
        "\n",
        "# #장갑차\n",
        "apc =  ols('장갑차~피해가_큰_지역', data = modified_df).fit()\n",
        "aov_air = sm.stats.anova_lm(apc, type = 2)\n",
        "print('OLS :장갑차 & 피해가 큰 지역')\n",
        "print(aov_air)\n",
        "print('\\n')\n",
        "\n",
        "\n",
        "# #해군함정\n",
        "naval_ship = ols('해군함정~피해가_큰_지역', data = modified_df).fit()\n",
        "aov_air = sm.stats.anova_lm(naval_ship, type = 2)\n",
        "print('OLS :해군함정 & 피해가 큰 지역')\n",
        "print(aov_air)\n",
        "print('\\n')\n",
        "\n",
        "\n",
        "# 탈것 및 연료탱크\n",
        "vehicles_and_fuel_tanks = ols('탈것_및_연료탱크~피해가_큰_지역', data = modified_df).fit()\n",
        "aov_air = sm.stats.anova_lm(vehicles_and_fuel_tanks, type = 2)\n",
        "print('OLS :탈것_및_연료탱크 & 피해가 큰 지역')\n",
        "print(aov_air)\n",
        "print('\\n')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "djAfO-GKRQn1",
        "outputId": "b216c96f-1ebd-44ff-96ce-cf5198f623b0"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "OLS :항공기 & 피해가 큰 지역\n",
            "            df     sum_sq   mean_sq         F    PR(>F)\n",
            "피해가_큰_지역  14.0  18.414130  1.315295  3.438125  0.000529\n",
            "Residual  54.0  20.658333  0.382562       NaN       NaN\n",
            "\n",
            "\n",
            "OLS :헬리콥터 & 피해가 큰 지역\n",
            "            df     sum_sq   mean_sq         F    PR(>F)\n",
            "피해가_큰_지역  14.0   4.658696  0.332764  1.503703  0.141447\n",
            "Residual  54.0  11.950000  0.221296       NaN       NaN\n",
            "\n",
            "\n",
            "OLS :탱크 & 피해가 큰 지역\n",
            "            df       sum_sq    mean_sq         F    PR(>F)\n",
            "피해가_큰_지역  14.0  1350.811594  96.486542  2.612976  0.005849\n",
            "Residual  54.0  1994.000000  36.925926       NaN       NaN\n",
            "\n",
            "\n",
            "OLS :장갑차 & 피해가 큰 지역\n",
            "            df       sum_sq     mean_sq         F   PR(>F)\n",
            "피해가_큰_지역  14.0  5265.461232  376.104374  4.890657  0.00001\n",
            "Residual  54.0  4152.741667   76.902623       NaN      NaN\n",
            "\n",
            "\n",
            "OLS :해군함정 & 피해가 큰 지역\n",
            "            df    sum_sq   mean_sq         F    PR(>F)\n",
            "피해가_큰_지역  14.0  1.812681  0.129477  1.449072  0.163287\n",
            "Residual  54.0  4.825000  0.089352       NaN       NaN\n",
            "\n",
            "\n",
            "OLS :탈것_및_연료탱크 & 피해가 큰 지역\n",
            "            df        sum_sq       mean_sq         F    PR(>F)\n",
            "피해가_큰_지역  14.0  5.956033e+05  42543.090787  0.900891  0.562671\n",
            "Residual  54.0  2.550062e+06  47223.370988       NaN       NaN\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 정리\n",
        "지역에 따른 장비별 파괴량의 차이에 영향을 주는 것은 '헬리콥터', '해군함정', '탈것 및 연료탱크' 이다. <br/>"
      ],
      "metadata": {
        "id": "5srEoQZNRqJ4"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Part 3-2 데이터 시각화"
      ],
      "metadata": {
        "id": "WliO20A6THh0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#### 헬리콥터, 해군 함정 및 탈것 및 연료탱크에 대한 시각화 생성 (지역별로)\n",
        "modified_df.head()\n",
        "\n",
        "#melt를 진행하기 전 데이터 인덱스 리셋\n",
        "#modified_df.re\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "8CNLXcU6YMsn",
        "outputId": "b15095e9-6155-4cc0-eef1-4d8e372c6846"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           피해가_큰_지역  항공기  헬리콥터  탱크  장갑차  해군함정  탈것_및_연료탱크 불확실한_사망자  사망자_수  \\\n",
              "59  Sievierodonetsk    2     0  11   20     0          0    about    100   \n",
              "60  Sievierodonetsk    3     0  34   50     0          0    about    200   \n",
              "63            Izyum    2     0  16   29     0          0    about    200   \n",
              "64            Izyum    1     0  22   27     0          0    about    200   \n",
              "65            Izyum    2     0  18   26     0       1796    about    300   \n",
              "\n",
              "    전쟁_포로  \n",
              "59      0  \n",
              "60      0  \n",
              "63      0  \n",
              "64      0  \n",
              "65      0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a27f4cf2-26fc-4fd3-bce1-f1d5dc068ba1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>피해가_큰_지역</th>\n",
              "      <th>항공기</th>\n",
              "      <th>헬리콥터</th>\n",
              "      <th>탱크</th>\n",
              "      <th>장갑차</th>\n",
              "      <th>해군함정</th>\n",
              "      <th>탈것_및_연료탱크</th>\n",
              "      <th>불확실한_사망자</th>\n",
              "      <th>사망자_수</th>\n",
              "      <th>전쟁_포로</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>Sievierodonetsk</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>20</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>Sievierodonetsk</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>50</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>Izyum</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>64</th>\n",
              "      <td>Izyum</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Izyum</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>1796</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a27f4cf2-26fc-4fd3-bce1-f1d5dc068ba1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a27f4cf2-26fc-4fd3-bce1-f1d5dc068ba1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a27f4cf2-26fc-4fd3-bce1-f1d5dc068ba1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sample_df_01 = modified_df.melt(id_vars='피해가_큰_지역', \n",
        "                                value_vars =['헬리콥터','탱크','탈것_및_연료탱크'],\n",
        "                                var_name = '탑승장비_3가지', value_name = '개수')\n",
        "\n",
        "\n",
        "\n",
        "sample_df_01.reset_index()\n",
        "\n",
        "fig = px.bar(sample_df_01, x = '피해가_큰_지역', y ='개수',\n",
        "             color = '탑승장비_3가지')\n",
        "\n",
        "fig.show(renderer='colab')\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "nBknmHLQObAf",
        "outputId": "3e16ed32-60f3-4256-d548-e760294af9d6"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"0fb667a3-55c3-4751-8627-ede08640251b\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"0fb667a3-55c3-4751-8627-ede08640251b\")) {                    Plotly.newPlot(                        \"0fb667a3-55c3-4751-8627-ede08640251b\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"\\ud0d1\\uc2b9\\uc7a5\\ube44_3\\uac00\\uc9c0=\\ud5ec\\ub9ac\\ucf65\\ud130<br>\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed=%{x}<br>\\uac1c\\uc218=%{y}<extra></extra>\",\"legendgroup\":\"\\ud5ec\\ub9ac\\ucf65\\ud130\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\\ud5ec\\ub9ac\\ucf65\\ud130\",\"offsetgroup\":\"\\ud5ec\\ub9ac\\ucf65\\ud130\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Sievierodonetsk\",\"Sievierodonetsk\",\"Izyum\",\"Izyum\",\"Izyum\",\"Izyum\",\"Izyum\",\"Popasna\",\"Slobozhanskyi\",\"Novopavlivsk\",\"Avdiivka\",\"Avdiivka\",\"Kurakhove\",\"Kurakhove\",\"Kurakhove\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Sievierodonetsk\",\"Lyman\",\"Avdiivka\",\"Avdiivka\",\"Bakhmut\",\"Zaporizhzhia\",\"Bakhmut\",\"Bakhmut\",\"Zaporizhzhia\",\"Bakhmut\",\"Sloviansk\",\"Sloviansk\",\"Sloviansk\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Kramatorsk\",\"Kramatorsk\",\"Kramatorsk\",\"Avdiivka\",\"Mykolaiv\",\"Mykolaiv\",\"Kramatorsk\",\"Kramatorsk\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Kramatorsk\",\"Bakhmut\",\"Sloviansk\",\"Kramatorsk\",\"Kramatorsk\",\"Bakhmut\",\"Kryvyi Rih\",\"Kryvyi Rih\",\"Kryvyi Rih\",\"Donetsk\",\"Donetsk\",\"Donetsk\",\"Donetsk\",\"Donetsk\",\"Donetsk\"],\"xaxis\":\"x\",\"y\":[0,0,0,0,0,0,0,0,0,1,2,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"\\ud0d1\\uc2b9\\uc7a5\\ube44_3\\uac00\\uc9c0=\\ud0f1\\ud06c<br>\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed=%{x}<br>\\uac1c\\uc218=%{y}<extra></extra>\",\"legendgroup\":\"\\ud0f1\\ud06c\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\\ud0f1\\ud06c\",\"offsetgroup\":\"\\ud0f1\\ud06c\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Sievierodonetsk\",\"Sievierodonetsk\",\"Izyum\",\"Izyum\",\"Izyum\",\"Izyum\",\"Izyum\",\"Popasna\",\"Slobozhanskyi\",\"Novopavlivsk\",\"Avdiivka\",\"Avdiivka\",\"Kurakhove\",\"Kurakhove\",\"Kurakhove\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Sievierodonetsk\",\"Lyman\",\"Avdiivka\",\"Avdiivka\",\"Bakhmut\",\"Zaporizhzhia\",\"Bakhmut\",\"Bakhmut\",\"Zaporizhzhia\",\"Bakhmut\",\"Sloviansk\",\"Sloviansk\",\"Sloviansk\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Kramatorsk\",\"Kramatorsk\",\"Kramatorsk\",\"Avdiivka\",\"Mykolaiv\",\"Mykolaiv\",\"Kramatorsk\",\"Kramatorsk\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Kramatorsk\",\"Bakhmut\",\"Sloviansk\",\"Kramatorsk\",\"Kramatorsk\",\"Bakhmut\",\"Kryvyi Rih\",\"Kryvyi Rih\",\"Kryvyi Rih\",\"Donetsk\",\"Donetsk\",\"Donetsk\",\"Donetsk\",\"Donetsk\",\"Donetsk\"],\"xaxis\":\"x\",\"y\":[11,34,16,22,18,22,14,15,12,8,15,25,8,10,13,9,15,7,8,9,3,10,7,8,11,2,4,9,5,5,4,3,5,2,2,9,7,8,15,5,1,4,5,35,1,3,4,4,0,18,5,5,7,3,4,9,4,14,8,7,1,4,7,10,4,3,10,3,6],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"\\ud0d1\\uc2b9\\uc7a5\\ube44_3\\uac00\\uc9c0=\\ud0c8\\uac83_\\ubc0f_\\uc5f0\\ub8cc\\ud0f1\\ud06c<br>\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed=%{x}<br>\\uac1c\\uc218=%{y}<extra></extra>\",\"legendgroup\":\"\\ud0c8\\uac83_\\ubc0f_\\uc5f0\\ub8cc\\ud0f1\\ud06c\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\\ud0c8\\uac83_\\ubc0f_\\uc5f0\\ub8cc\\ud0f1\\ud06c\",\"offsetgroup\":\"\\ud0c8\\uac83_\\ubc0f_\\uc5f0\\ub8cc\\ud0f1\\ud06c\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Sievierodonetsk\",\"Sievierodonetsk\",\"Izyum\",\"Izyum\",\"Izyum\",\"Izyum\",\"Izyum\",\"Popasna\",\"Slobozhanskyi\",\"Novopavlivsk\",\"Avdiivka\",\"Avdiivka\",\"Kurakhove\",\"Kurakhove\",\"Kurakhove\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Sievierodonetsk\",\"Lyman\",\"Avdiivka\",\"Avdiivka\",\"Bakhmut\",\"Zaporizhzhia\",\"Bakhmut\",\"Bakhmut\",\"Zaporizhzhia\",\"Bakhmut\",\"Sloviansk\",\"Sloviansk\",\"Sloviansk\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Kramatorsk\",\"Kramatorsk\",\"Kramatorsk\",\"Avdiivka\",\"Mykolaiv\",\"Mykolaiv\",\"Kramatorsk\",\"Kramatorsk\",\"Bakhmut\",\"Bakhmut\",\"Bakhmut\",\"Kramatorsk\",\"Bakhmut\",\"Sloviansk\",\"Kramatorsk\",\"Kramatorsk\",\"Bakhmut\",\"Kryvyi Rih\",\"Kryvyi Rih\",\"Kryvyi Rih\",\"Donetsk\",\"Donetsk\",\"Donetsk\",\"Donetsk\",\"Donetsk\",\"Donetsk\"],\"xaxis\":\"x\",\"y\":[0,0,0,0,1796,28,19,40,8,27,9,10,22,23,17,5,16,16,12,7,4,8,1,14,18,35,4,8,23,35,10,1,15,5,13,9,2,5,14,9,4,8,4,20,2,7,2,3,5,16,11,4,11,7,14,8,6,3,9,3,12,7,16,19,13,4,6,8,15],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"\\uac1c\\uc218\"}},\"legend\":{\"title\":{\"text\":\"\\ud0d1\\uc2b9\\uc7a5\\ube44_3\\uac00\\uc9c0\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('0fb667a3-55c3-4751-8627-ede08640251b');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---- \n",
        "##Part 4 시간에 따른 전쟁 양상 시각화\n",
        "> 시간에 따른 전쟁의 변화를 간단하게 살펴봅시다."
      ],
      "metadata": {
        "id": "wdfZDf7-McrG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "merge_df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Y5Yvo07MS-71",
        "outputId": "21544c46-b7ad-4424-8ea9-8339f730c69a"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['날짜', '개전일', '피해가_큰_지역', '항공기', '헬리콥터', '탱크', '장갑차', '야포', '다중로켓발사기',\n",
              "       '자동화기기', '연료탱크', '드론', '해군함정', '방공포', '특수_장비', '자동화_탄도_미사일',\n",
              "       '탈것_및_연료탱크', '크루즈_미사일', '파괴된_장비의_총_개수', '불확실한_사망자', '사망자_수', '전쟁_포로'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import plotly.graph_objects as go\n",
        "\n",
        "fig = go.Figure()\n",
        "\n",
        "# add_trace() 그림에 추가할 부분을 지정한다. / go.Scatter 산점도 추가\n",
        "fig.add_trace(go.Scatter(x = merge_df['날짜'],y = merge_df['파괴된_장비의_총_개수'],\n",
        "                         mode='lines+markers', name='파괴된 장비의 총 개수'))\n",
        "\n",
        "\n",
        "fig.add_trace(go.Scatter(x = merge_df['날짜'], y = merge_df['사망자_수'],\n",
        "                         mode='lines+markers', name = '사망자 수'))\n",
        "\n",
        "\\\n",
        "fig.add_trace(go.Scatter(x = merge_df['날짜'],y = merge_df['전쟁_포로'],\n",
        "                         mode='lines+markers', name = '전쟁 포로'))\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "fig.update_layout(title = '<b> 시간에 따른 전쟁 양상 </b>')\n",
        "\n",
        "# 코랩으로 바로 시각화를 하기 위해 파라미터 지정\n",
        "fig.show(renderer=\"colab\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "lzJn5YA1Mjb0",
        "outputId": "dc530cf9-f19a-4e85-8a8c-db386c59e79c"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"b8e83f19-c762-488e-a8fb-9037a3175d01\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"b8e83f19-c762-488e-a8fb-9037a3175d01\")) {                    Plotly.newPlot(                        \"b8e83f19-c762-488e-a8fb-9037a3175d01\",                        [{\"mode\":\"lines+markers\",\"name\":\"\\ud30c\\uad34\\ub41c \\uc7a5\\ube44\\uc758 \\ucd1d \\uac1c\\uc218\",\"x\":[\"2022-02-25T00:00:00\",\"2022-02-26T00:00:00\",\"2022-02-27T00:00:00\",\"2022-02-28T00:00:00\",\"2022-03-01T00:00:00\",\"2022-03-02T00:00:00\",\"2022-03-03T00:00:00\",\"2022-03-04T00:00:00\",\"2022-03-05T00:00:00\",\"2022-03-06T00:00:00\",\"2022-03-07T00:00:00\",\"2022-03-08T00:00:00\",\"2022-03-09T00:00:00\",\"2022-03-10T00:00:00\",\"2022-03-11T00:00:00\",\"2022-03-12T00:00:00\",\"2022-03-13T00:00:00\",\"2022-03-14T00:00:00\",\"2022-03-15T00:00:00\",\"2022-03-16T00:00:00\",\"2022-03-17T00:00:00\",\"2022-03-18T00:00:00\",\"2022-03-19T00:00:00\",\"2022-03-20T00:00:00\",\"2022-03-21T00:00:00\",\"2022-03-22T00:00:00\",\"2022-03-23T00:00:00\",\"2022-03-24T00:00:00\",\"2022-03-25T00:00:00\",\"2022-03-26T00:00:00\",\"2022-03-27T00:00:00\",\"2022-03-28T00:00:00\",\"2022-03-29T00:00:00\",\"2022-03-30T00:00:00\",\"2022-03-31T00:00:00\",\"2022-04-01T00:00:00\",\"2022-04-02T00:00:00\",\"2022-04-03T00:00:00\",\"2022-04-04T00:00:00\",\"2022-04-05T00:00:00\",\"2022-04-06T00:00:00\",\"2022-04-07T00:00:00\",\"2022-04-08T00:00:00\",\"2022-04-09T00:00:00\",\"2022-04-10T00:00:00\",\"2022-04-11T00:00:00\",\"2022-04-12T00:00:00\",\"2022-04-13T00:00:00\",\"2022-04-14T00:00:00\",\"2022-04-15T00:00:00\",\"2022-04-16T00:00:00\",\"2022-04-17T00:00:00\",\"2022-04-18T00:00:00\",\"2022-04-19T00:00:00\",\"2022-04-20T00:00:00\",\"2022-04-21T00:00:00\",\"2022-04-22T00:00:00\",\"2022-04-23T00:00:00\",\"2022-04-24T00:00:00\",\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-27T00:00:00\",\"2022-04-28T00:00:00\",\"2022-04-29T00:00:00\",\"2022-04-30T00:00:00\",\"2022-05-01T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-04T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-06T00:00:00\",\"2022-05-07T00:00:00\",\"2022-05-08T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-11T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-14T00:00:00\",\"2022-05-15T00:00:00\",\"2022-05-16T00:00:00\",\"2022-05-17T00:00:00\",\"2022-05-18T00:00:00\",\"2022-05-19T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-21T00:00:00\",\"2022-05-22T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-28T00:00:00\",\"2022-05-29T00:00:00\",\"2022-05-30T00:00:00\",\"2022-05-31T00:00:00\",\"2022-06-01T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-04T00:00:00\",\"2022-06-05T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-10T00:00:00\",\"2022-06-11T00:00:00\",\"2022-06-12T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-15T00:00:00\",\"2022-06-16T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-18T00:00:00\",\"2022-06-19T00:00:00\",\"2022-06-20T00:00:00\",\"2022-06-21T00:00:00\",\"2022-06-22T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-24T00:00:00\",\"2022-06-25T00:00:00\",\"2022-06-26T00:00:00\",\"2022-06-27T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-02T00:00:00\",\"2022-07-03T00:00:00\",\"2022-07-04T00:00:00\",\"2022-07-05T00:00:00\",\"2022-07-06T00:00:00\",\"2022-07-07T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-09T00:00:00\",\"2022-07-10T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-16T00:00:00\",\"2022-07-17T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-22T00:00:00\",\"2022-07-23T00:00:00\",\"2022-07-24T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-07-30T00:00:00\",\"2022-07-31T00:00:00\",\"2022-08-01T00:00:00\",\"2022-08-02T00:00:00\",\"2022-08-03T00:00:00\",\"2022-08-04T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-06T00:00:00\",\"2022-08-07T00:00:00\",\"2022-08-08T00:00:00\"],\"y\":[828,324,5,323,100,108,72,142,39,114,62,97,59,101,126,93,73,75,80,382,134,51,92,88,117,102,66,90,150,89,56,64,68,47,51,64,57,95,55,101,16,94,7,15,63,35,70,74,46,24,40,65,91,57,64,54,88,102,87,57,176,89,123,73,65,1957,141,129,115,125,94,73,96,81,88,103,69,81,83,65,74,68,99,70,50,62,63,59,53,39,67,28,33,38,60,65,76,57,49,42,56,61,38,39,40,62,43,46,22,36,53,45,37,45,31,34,72,20,43,19,30,47,74,56,44,23,35,23,19,24,43,52,42,84,17,23,16,8,12,40,53,35,30,27,30,48,30,37,34,41,47,31,33,33,41,46,42,41,13,34,69,22,48,30,44],\"type\":\"scatter\"},{\"mode\":\"lines+markers\",\"name\":\"\\uc0ac\\ub9dd\\uc790 \\uc218\",\"x\":[\"2022-02-25T00:00:00\",\"2022-02-26T00:00:00\",\"2022-02-27T00:00:00\",\"2022-02-28T00:00:00\",\"2022-03-01T00:00:00\",\"2022-03-02T00:00:00\",\"2022-03-03T00:00:00\",\"2022-03-04T00:00:00\",\"2022-03-05T00:00:00\",\"2022-03-06T00:00:00\",\"2022-03-07T00:00:00\",\"2022-03-08T00:00:00\",\"2022-03-09T00:00:00\",\"2022-03-10T00:00:00\",\"2022-03-11T00:00:00\",\"2022-03-12T00:00:00\",\"2022-03-13T00:00:00\",\"2022-03-14T00:00:00\",\"2022-03-15T00:00:00\",\"2022-03-16T00:00:00\",\"2022-03-17T00:00:00\",\"2022-03-18T00:00:00\",\"2022-03-19T00:00:00\",\"2022-03-20T00:00:00\",\"2022-03-21T00:00:00\",\"2022-03-22T00:00:00\",\"2022-03-23T00:00:00\",\"2022-03-24T00:00:00\",\"2022-03-25T00:00:00\",\"2022-03-26T00:00:00\",\"2022-03-27T00:00:00\",\"2022-03-28T00:00:00\",\"2022-03-29T00:00:00\",\"2022-03-30T00:00:00\",\"2022-03-31T00:00:00\",\"2022-04-01T00:00:00\",\"2022-04-02T00:00:00\",\"2022-04-03T00:00:00\",\"2022-04-04T00:00:00\",\"2022-04-05T00:00:00\",\"2022-04-06T00:00:00\",\"2022-04-07T00:00:00\",\"2022-04-08T00:00:00\",\"2022-04-09T00:00:00\",\"2022-04-10T00:00:00\",\"2022-04-11T00:00:00\",\"2022-04-12T00:00:00\",\"2022-04-13T00:00:00\",\"2022-04-14T00:00:00\",\"2022-04-15T00:00:00\",\"2022-04-16T00:00:00\",\"2022-04-17T00:00:00\",\"2022-04-18T00:00:00\",\"2022-04-19T00:00:00\",\"2022-04-20T00:00:00\",\"2022-04-21T00:00:00\",\"2022-04-22T00:00:00\",\"2022-04-23T00:00:00\",\"2022-04-24T00:00:00\",\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-27T00:00:00\",\"2022-04-28T00:00:00\",\"2022-04-29T00:00:00\",\"2022-04-30T00:00:00\",\"2022-05-01T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-04T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-06T00:00:00\",\"2022-05-07T00:00:00\",\"2022-05-08T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-11T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-14T00:00:00\",\"2022-05-15T00:00:00\",\"2022-05-16T00:00:00\",\"2022-05-17T00:00:00\",\"2022-05-18T00:00:00\",\"2022-05-19T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-21T00:00:00\",\"2022-05-22T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-28T00:00:00\",\"2022-05-29T00:00:00\",\"2022-05-30T00:00:00\",\"2022-05-31T00:00:00\",\"2022-06-01T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-04T00:00:00\",\"2022-06-05T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-10T00:00:00\",\"2022-06-11T00:00:00\",\"2022-06-12T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-15T00:00:00\",\"2022-06-16T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-18T00:00:00\",\"2022-06-19T00:00:00\",\"2022-06-20T00:00:00\",\"2022-06-21T00:00:00\",\"2022-06-22T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-24T00:00:00\",\"2022-06-25T00:00:00\",\"2022-06-26T00:00:00\",\"2022-06-27T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-02T00:00:00\",\"2022-07-03T00:00:00\",\"2022-07-04T00:00:00\",\"2022-07-05T00:00:00\",\"2022-07-06T00:00:00\",\"2022-07-07T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-09T00:00:00\",\"2022-07-10T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-16T00:00:00\",\"2022-07-17T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-22T00:00:00\",\"2022-07-23T00:00:00\",\"2022-07-24T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-07-30T00:00:00\",\"2022-07-31T00:00:00\",\"2022-08-01T00:00:00\",\"2022-08-02T00:00:00\",\"2022-08-03T00:00:00\",\"2022-08-04T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-06T00:00:00\",\"2022-08-07T00:00:00\",\"2022-08-08T00:00:00\"],\"y\":[2800,1500,200,800,410,130,3160,166,834,1000,0,1000,0,0,0,0,0,0,1500,300,200,200,200,300,300,300,300,200,300,300,200,400,200,100,200,200,0,300,300,200,100,300,100,100,200,200,100,200,100,100,100,200,300,200,100,100,200,400,200,100,200,300,400,200,200,300,300,400,300,200,200,200,400,150,350,350,300,250,300,200,300,200,400,200,200,150,200,150,150,100,150,150,250,150,200,150,200,150,100,100,100,100,110,140,200,200,150,100,150,200,250,200,200,200,250,200,300,130,200,100,170,150,150,250,200,150,150,120,100,230,150,150,150,250,300,100,100,70,100,300,130,140,160,150,100,200,100,150,240,280,180,170,200,160,270,170,160,200,140,180,150,150,250,300,140],\"type\":\"scatter\"},{\"mode\":\"lines+markers\",\"name\":\"\\uc804\\uc7c1 \\ud3ec\\ub85c\",\"x\":[\"2022-02-25T00:00:00\",\"2022-02-26T00:00:00\",\"2022-02-27T00:00:00\",\"2022-02-28T00:00:00\",\"2022-03-01T00:00:00\",\"2022-03-02T00:00:00\",\"2022-03-03T00:00:00\",\"2022-03-04T00:00:00\",\"2022-03-05T00:00:00\",\"2022-03-06T00:00:00\",\"2022-03-07T00:00:00\",\"2022-03-08T00:00:00\",\"2022-03-09T00:00:00\",\"2022-03-10T00:00:00\",\"2022-03-11T00:00:00\",\"2022-03-12T00:00:00\",\"2022-03-13T00:00:00\",\"2022-03-14T00:00:00\",\"2022-03-15T00:00:00\",\"2022-03-16T00:00:00\",\"2022-03-17T00:00:00\",\"2022-03-18T00:00:00\",\"2022-03-19T00:00:00\",\"2022-03-20T00:00:00\",\"2022-03-21T00:00:00\",\"2022-03-22T00:00:00\",\"2022-03-23T00:00:00\",\"2022-03-24T00:00:00\",\"2022-03-25T00:00:00\",\"2022-03-26T00:00:00\",\"2022-03-27T00:00:00\",\"2022-03-28T00:00:00\",\"2022-03-29T00:00:00\",\"2022-03-30T00:00:00\",\"2022-03-31T00:00:00\",\"2022-04-01T00:00:00\",\"2022-04-02T00:00:00\",\"2022-04-03T00:00:00\",\"2022-04-04T00:00:00\",\"2022-04-05T00:00:00\",\"2022-04-06T00:00:00\",\"2022-04-07T00:00:00\",\"2022-04-08T00:00:00\",\"2022-04-09T00:00:00\",\"2022-04-10T00:00:00\",\"2022-04-11T00:00:00\",\"2022-04-12T00:00:00\",\"2022-04-13T00:00:00\",\"2022-04-14T00:00:00\",\"2022-04-15T00:00:00\",\"2022-04-16T00:00:00\",\"2022-04-17T00:00:00\",\"2022-04-18T00:00:00\",\"2022-04-19T00:00:00\",\"2022-04-20T00:00:00\",\"2022-04-21T00:00:00\",\"2022-04-22T00:00:00\",\"2022-04-23T00:00:00\",\"2022-04-24T00:00:00\",\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-27T00:00:00\",\"2022-04-28T00:00:00\",\"2022-04-29T00:00:00\",\"2022-04-30T00:00:00\",\"2022-05-01T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-04T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-06T00:00:00\",\"2022-05-07T00:00:00\",\"2022-05-08T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-11T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-14T00:00:00\",\"2022-05-15T00:00:00\",\"2022-05-16T00:00:00\",\"2022-05-17T00:00:00\",\"2022-05-18T00:00:00\",\"2022-05-19T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-21T00:00:00\",\"2022-05-22T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-28T00:00:00\",\"2022-05-29T00:00:00\",\"2022-05-30T00:00:00\",\"2022-05-31T00:00:00\",\"2022-06-01T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-04T00:00:00\",\"2022-06-05T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-10T00:00:00\",\"2022-06-11T00:00:00\",\"2022-06-12T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-15T00:00:00\",\"2022-06-16T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-18T00:00:00\",\"2022-06-19T00:00:00\",\"2022-06-20T00:00:00\",\"2022-06-21T00:00:00\",\"2022-06-22T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-24T00:00:00\",\"2022-06-25T00:00:00\",\"2022-06-26T00:00:00\",\"2022-06-27T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-02T00:00:00\",\"2022-07-03T00:00:00\",\"2022-07-04T00:00:00\",\"2022-07-05T00:00:00\",\"2022-07-06T00:00:00\",\"2022-07-07T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-09T00:00:00\",\"2022-07-10T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-16T00:00:00\",\"2022-07-17T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-22T00:00:00\",\"2022-07-23T00:00:00\",\"2022-07-24T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-07-30T00:00:00\",\"2022-07-31T00:00:00\",\"2022-08-01T00:00:00\",\"2022-08-02T00:00:00\",\"2022-08-03T00:00:00\",\"2022-08-04T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-06T00:00:00\",\"2022-08-07T00:00:00\",\"2022-08-08T00:00:00\"],\"y\":[0,0,0,0,200,0,0,0,16,16,27,25,76,11,18,0,0,0,0,0,16,0,0,0,0,6,1,0,0,0,9,0,9,0,29,0,1,0,0,7,0,0,0,0,0,0,10,0,0,0,0,0,0,12,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"title\":{\"text\":\"<b> \\uc2dc\\uac04\\uc5d0 \\ub530\\ub978 \\uc804\\uc7c1 \\uc591\\uc0c1 </b>\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('b8e83f19-c762-488e-a8fb-9037a3175d01');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# modified_df 에는 날짜가 현재 생략된 상태이므로, 다시 데이터를 재구조화 합니다.\n",
        "merge_df.head()\n",
        "\n",
        "\n",
        "#필요하지 않는 컬럼 제거\n",
        "mode_df_01 = merge_df.drop(['파괴된_장비의_총_개수'], axis =1)\n",
        "\n",
        "\n",
        "columns_vehicle = ['항공기', '헬리콥터', '탱크', '장갑차','해군함정','탈것_및_연료탱크']\n",
        "columns_strategy = ['야포', '다중로켓발사기','자동화기기', '연료탱크', '드론', '방공포', '특수_장비', '자동화_탄도_미사일', '크루즈_미사일']\n",
        "\n",
        "\n",
        "# 피해가 큰 지역에 대하여 결측값 채워넣기.\n",
        "mode_df_01.fillna('Unable to verify', inplace=True)\n",
        "\n",
        "\n",
        "# Unable to verify 을 가지고 있는 행 제외\n",
        "index_drop = mode_df_01[mode_df_01['피해가_큰_지역'] == 'Unable to verify'].index  #print(index_drop)\n",
        "mode_df_01 = mode_df_01.drop(index_drop)\n",
        "\n",
        "\n",
        "# 지역이름이 2개 이상인 지역 제외.\n",
        "index_number = [61, 62, 68, 70, 75, 79, 80, 81, 82, 83, 92, 95, 96,105, 106, 107, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 128, 129, 130, 131, 132, 147, 148, 157, 158, 159, 160]\n",
        "\n",
        "# # 인덱스 제거 \n",
        "mode_df_01.drop(index_number, inplace = True)\n",
        "mode_df_01"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "GXwdHRITTR25",
        "outputId": "963f312c-b3d8-4c66-898f-d20e32fe1ffc"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            날짜  개전일         피해가_큰_지역  항공기  헬리콥터  탱크  장갑차  야포  다중로켓발사기  자동화기기  \\\n",
              "59  2022-04-25   61  Sievierodonetsk    2     0  11   20   3        2      9   \n",
              "60  2022-04-26   62  Sievierodonetsk    3     0  34   50   5        0     77   \n",
              "63  2022-04-29   65            Izyum    2     0  16   29   4        0      7   \n",
              "64  2022-04-30   66            Izyum    1     0  22   27   1        0      6   \n",
              "65  2022-05-01   67            Izyum    2     0  18   26  15        0      0   \n",
              "66  2022-05-02   68            Izyum    2     0  22   48   8        1      0   \n",
              "67  2022-05-03   69            Izyum    0     0  14   48  16       10      0   \n",
              "69  2022-05-05   71          Popasna    2     0  15   41   8        6      0   \n",
              "71  2022-05-07   73    Slobozhanskyi    0     0  12   27   7        1      0   \n",
              "72  2022-05-08   74     Novopavlivsk    0     1   8   28   0        7      0   \n",
              "73  2022-05-09   75         Avdiivka    0     2  15   23   4        6      0   \n",
              "74  2022-05-10   76         Avdiivka    0     0  25   44   6        0      0   \n",
              "76  2022-05-12   78        Kurakhove    0     1   8   17   6        6      0   \n",
              "77  2022-05-13   79        Kurakhove    1     1  10   27   8        2      0   \n",
              "78  2022-05-14   80        Kurakhove    0     1  13   34   9        2      0   \n",
              "84  2022-05-20   86          Bakhmut    1     1   9   27   1        1      0   \n",
              "85  2022-05-21   87          Bakhmut    0     1  15   26   0        1      0   \n",
              "86  2022-05-22   88          Bakhmut    0     1   7   25   3        0      0   \n",
              "87  2022-05-23   89          Bakhmut    0     0   8   25   5        0      0   \n",
              "88  2022-05-24   90  Sievierodonetsk    1     0   9   28   2        0      0   \n",
              "89  2022-05-25   91            Lyman    1     0   3   19   0        0      0   \n",
              "90  2022-05-26   92         Avdiivka    0     0  10   22  11        0      0   \n",
              "91  2022-05-27   93         Avdiivka    0     0   7   11   6        0      0   \n",
              "93  2022-05-29   95          Bakhmut    0     0   8   12   3        0      0   \n",
              "94  2022-05-30   96     Zaporizhzhia    0     0  11   12  12        2      0   \n",
              "97  2022-06-02   99          Bakhmut    2     0   2   11   2        0      0   \n",
              "98  2022-06-03  100          Bakhmut    0     0   4   12  14        0      0   \n",
              "99  2022-06-04  101     Zaporizhzhia    0     0   9   13   5        0      0   \n",
              "100 2022-06-05  102          Bakhmut    0     0   5   13   6        0      0   \n",
              "101 2022-06-06  103        Sloviansk    1     1   5    8   4        0      0   \n",
              "102 2022-06-07  104        Sloviansk    1     1   4   16   4        0      0   \n",
              "103 2022-06-08  105        Sloviansk    0     1   3   13   9        6      0   \n",
              "104 2022-06-09  106          Bakhmut    0     0   5    9   8        0      0   \n",
              "108 2022-06-13  110          Bakhmut    1     0   2    8   3        0      0   \n",
              "109 2022-06-14  111          Bakhmut    0     1   2   11   3        3      0   \n",
              "111 2022-06-16  113          Bakhmut    0     0   9   17   7        3      0   \n",
              "112 2022-06-17  114          Bakhmut    2     1   7   18   5        0      0   \n",
              "118 2022-06-23  120          Bakhmut    0     1   8   18   4        1      0   \n",
              "123 2022-06-28  125          Bakhmut    0     1  15   17   7        0      0   \n",
              "124 2022-06-29  126          Bakhmut    0     0   5   16   3        3      0   \n",
              "125 2022-06-30  127          Bakhmut    0     0   1    6   9        0      0   \n",
              "126 2022-07-01  128          Bakhmut    0     1   4   10   6        0      0   \n",
              "127 2022-07-02  129          Bakhmut    0     0   5    1   4        0      0   \n",
              "133 2022-07-08  135       Kramatorsk    0     0  35   14  13        0      0   \n",
              "134 2022-07-09  136       Kramatorsk    0     0   1    4   4        0      0   \n",
              "135 2022-07-10  137       Kramatorsk    0     1   3    8   2        0      0   \n",
              "136 2022-07-11  138         Avdiivka    0     0   4    5   4        0      0   \n",
              "137 2022-07-12  139         Mykolaiv    0     0   4    1   0        0      0   \n",
              "138 2022-07-13  140         Mykolaiv    0     0   0    3   1        0      0   \n",
              "139 2022-07-14  141       Kramatorsk    2     0  18    0   1        0      0   \n",
              "140 2022-07-15  142       Kramatorsk    1     0   5   34   2        0      0   \n",
              "141 2022-07-16  143          Bakhmut    0     0   5    8   4        0      0   \n",
              "142 2022-07-17  144          Bakhmut    0     0   7    5   0        1      0   \n",
              "143 2022-07-18  145          Bakhmut    0     0   3    7   3        0      0   \n",
              "144 2022-07-19  146       Kramatorsk    0     0   4    6   2        0      0   \n",
              "145 2022-07-20  147          Bakhmut    1     0   9   13   5        2      0   \n",
              "146 2022-07-21  148        Sloviansk    0     0   4    7   3        1      0   \n",
              "149 2022-07-24  151       Kramatorsk    0     0  14   13   5        2      0   \n",
              "150 2022-07-25  152       Kramatorsk    1     0   8    8   7        2      0   \n",
              "151 2022-07-26  153          Bakhmut    0     1   7    9   4        1      0   \n",
              "152 2022-07-27  154       Kryvyi Rih    0     1   1   12   3        0      0   \n",
              "153 2022-07-28  155       Kryvyi Rih    0     0   4    8  11        0      0   \n",
              "154 2022-07-29  156       Kryvyi Rih    0     0   7    8   6        0      0   \n",
              "155 2022-07-30  157          Donetsk    0     0  10    8   6        0      0   \n",
              "156 2022-07-31  158          Donetsk    1     0   4    9  10        1      0   \n",
              "161 2022-08-05  163          Donetsk    0     0   3    6   4        0      0   \n",
              "162 2022-08-06  164          Donetsk    0     0  10   19   5        0      0   \n",
              "163 2022-08-07  165          Donetsk    0     0   3    4   3        0      0   \n",
              "164 2022-08-08  166          Donetsk    0     1   6   15   2        1      0   \n",
              "\n",
              "     연료탱크  드론  해군함정  방공포  특수_장비  자동화_탄도_미사일  탈것_및_연료탱크  크루즈_미사일 불확실한_사망자  \\\n",
              "59      0  10     0    0      0           0          0        0    about   \n",
              "60      0   4     0    0      3           0          0        0    about   \n",
              "63      0  14     0    1      0           0          0        0    about   \n",
              "64      0   3     0    4      1           0          0        0    about   \n",
              "65      0  13     0    3      0           0       1796       84    about   \n",
              "66      0  26     0    0      6           0         28        0    about   \n",
              "67      0  20     2    0      0           0         19        0    about   \n",
              "69      0   9     0    2      0           0         40        2    about   \n",
              "71      0  17     0    1      0           0          8        0    about   \n",
              "72      0  19     1    2      1           0         27        2    about   \n",
              "73      0  17     0    1      2           0          9        2    about   \n",
              "74      0   3     0    0      0           0         10        0    about   \n",
              "76      0   8     1    0      0           0         22        0    about   \n",
              "77      0   7     0    1      0           0         23        1    about   \n",
              "78      0   6     0    0      1           0         17        0    about   \n",
              "84      0   5     0    0      0           0          5        0    about   \n",
              "85      0   2     0    0      0           0         16        1    about   \n",
              "86      0   8     0    0      0           0         16        3    about   \n",
              "87      0   6     0    0      0           0         12        3    about   \n",
              "88      0   4     0    0      0           0          7        2    about   \n",
              "89      0  11     0    0      1           0          4        0    about   \n",
              "90      0  11     0    0      3           0          8        2    about   \n",
              "91      0   1     0    0      1           0          1        1    about   \n",
              "93      0   1     0    0      0           0         14        0    about   \n",
              "94      0   3     0    0      0           0         18        2    about   \n",
              "97      0   2     0    1      2           0         35        0    about   \n",
              "98      0  14     0    0      0           0          4        1    about   \n",
              "99      0   5     0    0      1           0          8        1    about   \n",
              "100     0   8     0    0      1           0         23        0    about   \n",
              "101     0   3     0    1      0           0         35        3    about   \n",
              "102     0   2     0    0      0           0         10        0    about   \n",
              "103     0   6     0    0      0           0          1        0    about   \n",
              "104     0   3     0    0      0           0         15        0    about   \n",
              "108     0   3     0    0      0           0          5        0    about   \n",
              "109     0   3     0    0      0           0         13        0    about   \n",
              "111     0   0     0    0      0           0          9        0    about   \n",
              "112     0   2     0    0      0           0          2        0    about   \n",
              "118     0   6     0    0      0           0          5        0    about   \n",
              "123     0   0     0    1      1           0         14        0    about   \n",
              "124     0   4     0    1      0           0          9        3    about   \n",
              "125     0   1     0    1      0           0          4        1    about   \n",
              "126     0   4     1    1      0           0          8        0    about   \n",
              "127     0   8     0    0      0           0          4        1    about   \n",
              "133     0   2     0    0      0           0         20        0    about   \n",
              "134     0   5     0    1      0           0          2        0    about   \n",
              "135     0   2     0    0      0           0          7        0    about   \n",
              "136     0   0     0    1      0           0          2        0    about   \n",
              "137     0   0     0    0      0           0          3        0    about   \n",
              "138     0   2     0    0      1           0          5        0    about   \n",
              "139     0   3     0    0      0           0         16        0    about   \n",
              "140     0   0     0    0      0           0         11        0    about   \n",
              "141     0   6     0    0      1           0          4        7    about   \n",
              "142     0   1     0    1      0           0         11        4    about   \n",
              "143     0   2     0    3      2           0          7        0    about   \n",
              "144     0   3     0    0      0           0         14        1    about   \n",
              "145     0  10     0    0      0           0          8        0    about   \n",
              "146     0   7     0    0      2           0          6        0    about   \n",
              "149     0   0     0    0      1           0          3        3    about   \n",
              "150     0   5     0    3      0           0          9        4    about   \n",
              "151     0   3     0    1      2           0          3        0    about   \n",
              "152     0   4     0    0      0           0         12        0    about   \n",
              "153     0   3     0    0      0           0          7        0    about   \n",
              "154     0   2     0    0      2           0         16        0    about   \n",
              "155     0   2     0    0      1           0         19        0    about   \n",
              "156     0   2     0    0      2           0         13        0    about   \n",
              "161     0   0     0    5      0           0          4        0    about   \n",
              "162     0   2     0    4      2           0          6        0    about   \n",
              "163     0   6     0    5      1           0          8        0    about   \n",
              "164     0   4     0    0      0           0         15        0    about   \n",
              "\n",
              "     사망자_수  전쟁_포로  \n",
              "59     100      0  \n",
              "60     200      0  \n",
              "63     200      0  \n",
              "64     200      0  \n",
              "65     300      0  \n",
              "66     300      0  \n",
              "67     400      0  \n",
              "69     200      0  \n",
              "71     200      0  \n",
              "72     400      0  \n",
              "73     150      0  \n",
              "74     350      0  \n",
              "76     300      0  \n",
              "77     250      0  \n",
              "78     300      0  \n",
              "84     200      0  \n",
              "85     150      0  \n",
              "86     200      0  \n",
              "87     150      0  \n",
              "88     150      0  \n",
              "89     100      0  \n",
              "90     150      0  \n",
              "91     150      0  \n",
              "93     150      0  \n",
              "94     200      0  \n",
              "97     150      0  \n",
              "98     100      0  \n",
              "99     100      0  \n",
              "100    100      0  \n",
              "101    100      0  \n",
              "102    110      0  \n",
              "103    140      0  \n",
              "104    200      0  \n",
              "108    150      0  \n",
              "109    200      0  \n",
              "111    200      0  \n",
              "112    200      0  \n",
              "118    200      0  \n",
              "123    250      0  \n",
              "124    200      0  \n",
              "125    150      0  \n",
              "126    150      0  \n",
              "127    120      0  \n",
              "133    250      0  \n",
              "134    300      0  \n",
              "135    100      0  \n",
              "136    100      0  \n",
              "137     70      0  \n",
              "138    100      0  \n",
              "139    300      0  \n",
              "140    130      0  \n",
              "141    140      0  \n",
              "142    160      0  \n",
              "143    150      0  \n",
              "144    100      0  \n",
              "145    200      0  \n",
              "146    100      0  \n",
              "149    280      0  \n",
              "150    180      0  \n",
              "151    170      0  \n",
              "152    200      0  \n",
              "153    160      0  \n",
              "154    270      0  \n",
              "155    170      0  \n",
              "156    160      0  \n",
              "161    150      0  \n",
              "162    250      0  \n",
              "163    300      0  \n",
              "164    140      0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2fe303d4-18ce-4044-8961-eb750b0b09c2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>날짜</th>\n",
              "      <th>개전일</th>\n",
              "      <th>피해가_큰_지역</th>\n",
              "      <th>항공기</th>\n",
              "      <th>헬리콥터</th>\n",
              "      <th>탱크</th>\n",
              "      <th>장갑차</th>\n",
              "      <th>야포</th>\n",
              "      <th>다중로켓발사기</th>\n",
              "      <th>자동화기기</th>\n",
              "      <th>연료탱크</th>\n",
              "      <th>드론</th>\n",
              "      <th>해군함정</th>\n",
              "      <th>방공포</th>\n",
              "      <th>특수_장비</th>\n",
              "      <th>자동화_탄도_미사일</th>\n",
              "      <th>탈것_및_연료탱크</th>\n",
              "      <th>크루즈_미사일</th>\n",
              "      <th>불확실한_사망자</th>\n",
              "      <th>사망자_수</th>\n",
              "      <th>전쟁_포로</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>2022-04-25</td>\n",
              "      <td>61</td>\n",
              "      <td>Sievierodonetsk</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>20</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>2022-04-26</td>\n",
              "      <td>62</td>\n",
              "      <td>Sievierodonetsk</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>50</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>2022-04-29</td>\n",
              "      <td>65</td>\n",
              "      <td>Izyum</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>29</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>64</th>\n",
              "      <td>2022-04-30</td>\n",
              "      <td>66</td>\n",
              "      <td>Izyum</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>2022-05-01</td>\n",
              "      <td>67</td>\n",
              "      <td>Izyum</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>26</td>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1796</td>\n",
              "      <td>84</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66</th>\n",
              "      <td>2022-05-02</td>\n",
              "      <td>68</td>\n",
              "      <td>Izyum</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>48</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>2022-05-03</td>\n",
              "      <td>69</td>\n",
              "      <td>Izyum</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>48</td>\n",
              "      <td>16</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>400</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>2022-05-05</td>\n",
              "      <td>71</td>\n",
              "      <td>Popasna</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>41</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>2</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>2022-05-07</td>\n",
              "      <td>73</td>\n",
              "      <td>Slobozhanskyi</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>27</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>72</th>\n",
              "      <td>2022-05-08</td>\n",
              "      <td>74</td>\n",
              "      <td>Novopavlivsk</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>19</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>about</td>\n",
              "      <td>400</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>2022-05-09</td>\n",
              "      <td>75</td>\n",
              "      <td>Avdiivka</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>15</td>\n",
              "      <td>23</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>2022-05-10</td>\n",
              "      <td>76</td>\n",
              "      <td>Avdiivka</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>44</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>350</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>76</th>\n",
              "      <td>2022-05-12</td>\n",
              "      <td>78</td>\n",
              "      <td>Kurakhove</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>17</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>2022-05-13</td>\n",
              "      <td>79</td>\n",
              "      <td>Kurakhove</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>10</td>\n",
              "      <td>27</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>23</td>\n",
              "      <td>1</td>\n",
              "      <td>about</td>\n",
              "      <td>250</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>2022-05-14</td>\n",
              "      <td>80</td>\n",
              "      <td>Kurakhove</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>13</td>\n",
              "      <td>34</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84</th>\n",
              "      <td>2022-05-20</td>\n",
              "      <td>86</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>85</th>\n",
              "      <td>2022-05-21</td>\n",
              "      <td>87</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>2022-05-22</td>\n",
              "      <td>88</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>25</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>2022-05-23</td>\n",
              "      <td>89</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>25</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88</th>\n",
              "      <td>2022-05-24</td>\n",
              "      <td>90</td>\n",
              "      <td>Sievierodonetsk</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>28</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>2022-05-25</td>\n",
              "      <td>91</td>\n",
              "      <td>Lyman</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90</th>\n",
              "      <td>2022-05-26</td>\n",
              "      <td>92</td>\n",
              "      <td>Avdiivka</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>22</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>2022-05-27</td>\n",
              "      <td>93</td>\n",
              "      <td>Avdiivka</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>11</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>2022-05-29</td>\n",
              "      <td>95</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>2022-05-30</td>\n",
              "      <td>96</td>\n",
              "      <td>Zaporizhzhia</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>2</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>2022-06-02</td>\n",
              "      <td>99</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>35</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>2022-06-03</td>\n",
              "      <td>100</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>12</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>2022-06-04</td>\n",
              "      <td>101</td>\n",
              "      <td>Zaporizhzhia</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>13</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>2022-06-05</td>\n",
              "      <td>102</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>13</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>2022-06-06</td>\n",
              "      <td>103</td>\n",
              "      <td>Sloviansk</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>35</td>\n",
              "      <td>3</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>2022-06-07</td>\n",
              "      <td>104</td>\n",
              "      <td>Sloviansk</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>110</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>2022-06-08</td>\n",
              "      <td>105</td>\n",
              "      <td>Sloviansk</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>2022-06-09</td>\n",
              "      <td>106</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108</th>\n",
              "      <td>2022-06-13</td>\n",
              "      <td>110</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>109</th>\n",
              "      <td>2022-06-14</td>\n",
              "      <td>111</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>2022-06-16</td>\n",
              "      <td>113</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>17</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>2022-06-17</td>\n",
              "      <td>114</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>18</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>2022-06-23</td>\n",
              "      <td>120</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>18</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>123</th>\n",
              "      <td>2022-06-28</td>\n",
              "      <td>125</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>17</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>250</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>2022-06-29</td>\n",
              "      <td>126</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>3</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>2022-06-30</td>\n",
              "      <td>127</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>126</th>\n",
              "      <td>2022-07-01</td>\n",
              "      <td>128</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>10</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127</th>\n",
              "      <td>2022-07-02</td>\n",
              "      <td>129</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>about</td>\n",
              "      <td>120</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>2022-07-08</td>\n",
              "      <td>135</td>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>35</td>\n",
              "      <td>14</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>250</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>2022-07-09</td>\n",
              "      <td>136</td>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>2022-07-10</td>\n",
              "      <td>137</td>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>2022-07-11</td>\n",
              "      <td>138</td>\n",
              "      <td>Avdiivka</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>2022-07-12</td>\n",
              "      <td>139</td>\n",
              "      <td>Mykolaiv</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>138</th>\n",
              "      <td>2022-07-13</td>\n",
              "      <td>140</td>\n",
              "      <td>Mykolaiv</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>139</th>\n",
              "      <td>2022-07-14</td>\n",
              "      <td>141</td>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>140</th>\n",
              "      <td>2022-07-15</td>\n",
              "      <td>142</td>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>34</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>141</th>\n",
              "      <td>2022-07-16</td>\n",
              "      <td>143</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>about</td>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>142</th>\n",
              "      <td>2022-07-17</td>\n",
              "      <td>144</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>about</td>\n",
              "      <td>160</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>143</th>\n",
              "      <td>2022-07-18</td>\n",
              "      <td>145</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>2022-07-19</td>\n",
              "      <td>146</td>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>2022-07-20</td>\n",
              "      <td>147</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>13</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>2022-07-21</td>\n",
              "      <td>148</td>\n",
              "      <td>Sloviansk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>2022-07-24</td>\n",
              "      <td>151</td>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>13</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>about</td>\n",
              "      <td>280</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>150</th>\n",
              "      <td>2022-07-25</td>\n",
              "      <td>152</td>\n",
              "      <td>Kramatorsk</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>about</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>2022-07-26</td>\n",
              "      <td>153</td>\n",
              "      <td>Bakhmut</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>170</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>152</th>\n",
              "      <td>2022-07-27</td>\n",
              "      <td>154</td>\n",
              "      <td>Kryvyi Rih</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>200</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>153</th>\n",
              "      <td>2022-07-28</td>\n",
              "      <td>155</td>\n",
              "      <td>Kryvyi Rih</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>160</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>154</th>\n",
              "      <td>2022-07-29</td>\n",
              "      <td>156</td>\n",
              "      <td>Kryvyi Rih</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>270</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>155</th>\n",
              "      <td>2022-07-30</td>\n",
              "      <td>157</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>170</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156</th>\n",
              "      <td>2022-07-31</td>\n",
              "      <td>158</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>9</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>160</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>2022-08-05</td>\n",
              "      <td>163</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>2022-08-06</td>\n",
              "      <td>164</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>19</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>250</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>2022-08-07</td>\n",
              "      <td>165</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>300</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>2022-08-08</td>\n",
              "      <td>166</td>\n",
              "      <td>Donetsk</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>15</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>about</td>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2fe303d4-18ce-4044-8961-eb750b0b09c2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2fe303d4-18ce-4044-8961-eb750b0b09c2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2fe303d4-18ce-4044-8961-eb750b0b09c2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 데이터 재구조화 : 시간에 따른 장비 파괴별 수(새로운 데이터 생성)\n",
        "mode_df = mode_df_01.melt(id_vars = ['날짜', '피해가_큰_지역'], value_vars =['피해가_큰_지역', '항공기', '헬리콥터', '탱크', '장갑차', '해군함정', '탈것_및_연료탱크'],\n",
        "                      var_name ='탑승장비_종류', value_name='개수')\n",
        "\n",
        "\n",
        "#시간별 탑승장비 파괴 개수 추이\n",
        "fig = px.bar(mode_df, x= '날짜', y='개수',\n",
        "             hover_data=['피해가_큰_지역'], color ='탑승장비_종류')\n",
        "\n",
        "\n",
        "fig.update_layout(title='<b> 시간별 탑승장비 파괴 개수 추이</b>')\n",
        "fig.show(renderer='colab') "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "ySdeOAMEVWY3",
        "outputId": "23039b9d-e5af-46b9-e5be-b66d967e0e45"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"87aa8453-68b1-4b0f-a7a6-1278ff27bbf5\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"87aa8453-68b1-4b0f-a7a6-1278ff27bbf5\")) {                    Plotly.newPlot(                        \"87aa8453-68b1-4b0f-a7a6-1278ff27bbf5\",                        [{\"alignmentgroup\":\"True\",\"customdata\":[[\"Sievierodonetsk\"],[\"Sievierodonetsk\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Popasna\"],[\"Slobozhanskyi\"],[\"Novopavlivsk\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Sievierodonetsk\"],[\"Lyman\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Avdiivka\"],[\"Mykolaiv\"],[\"Mykolaiv\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"]],\"hovertemplate\":\"\\ud0d1\\uc2b9\\uc7a5\\ube44_\\uc885\\ub958=\\ud56d\\uacf5\\uae30<br>\\ub0a0\\uc9dc=%{x}<br>\\uac1c\\uc218=%{y}<br>\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed=%{customdata[0]}<extra></extra>\",\"legendgroup\":\"\\ud56d\\uacf5\\uae30\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\\ud56d\\uacf5\\uae30\",\"offsetgroup\":\"\\ud56d\\uacf5\\uae30\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-29T00:00:00\",\"2022-04-30T00:00:00\",\"2022-05-01T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-07T00:00:00\",\"2022-05-08T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-14T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-21T00:00:00\",\"2022-05-22T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-29T00:00:00\",\"2022-05-30T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-04T00:00:00\",\"2022-06-05T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-16T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-02T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-09T00:00:00\",\"2022-07-10T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-16T00:00:00\",\"2022-07-17T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-24T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-07-30T00:00:00\",\"2022-07-31T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-06T00:00:00\",\"2022-08-07T00:00:00\",\"2022-08-08T00:00:00\"],\"xaxis\":\"x\",\"y\":[2,3,2,1,2,2,0,2,0,0,0,0,0,1,0,1,0,0,0,1,1,0,0,0,0,2,0,0,0,1,1,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"customdata\":[[\"Sievierodonetsk\"],[\"Sievierodonetsk\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Popasna\"],[\"Slobozhanskyi\"],[\"Novopavlivsk\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Sievierodonetsk\"],[\"Lyman\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Avdiivka\"],[\"Mykolaiv\"],[\"Mykolaiv\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"]],\"hovertemplate\":\"\\ud0d1\\uc2b9\\uc7a5\\ube44_\\uc885\\ub958=\\ud5ec\\ub9ac\\ucf65\\ud130<br>\\ub0a0\\uc9dc=%{x}<br>\\uac1c\\uc218=%{y}<br>\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed=%{customdata[0]}<extra></extra>\",\"legendgroup\":\"\\ud5ec\\ub9ac\\ucf65\\ud130\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\\ud5ec\\ub9ac\\ucf65\\ud130\",\"offsetgroup\":\"\\ud5ec\\ub9ac\\ucf65\\ud130\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-29T00:00:00\",\"2022-04-30T00:00:00\",\"2022-05-01T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-07T00:00:00\",\"2022-05-08T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-14T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-21T00:00:00\",\"2022-05-22T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-29T00:00:00\",\"2022-05-30T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-04T00:00:00\",\"2022-06-05T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-16T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-02T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-09T00:00:00\",\"2022-07-10T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-16T00:00:00\",\"2022-07-17T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-24T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-07-30T00:00:00\",\"2022-07-31T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-06T00:00:00\",\"2022-08-07T00:00:00\",\"2022-08-08T00:00:00\"],\"xaxis\":\"x\",\"y\":[0,0,0,0,0,0,0,0,0,1,2,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"customdata\":[[\"Sievierodonetsk\"],[\"Sievierodonetsk\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Popasna\"],[\"Slobozhanskyi\"],[\"Novopavlivsk\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Sievierodonetsk\"],[\"Lyman\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Avdiivka\"],[\"Mykolaiv\"],[\"Mykolaiv\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"]],\"hovertemplate\":\"\\ud0d1\\uc2b9\\uc7a5\\ube44_\\uc885\\ub958=\\ud0f1\\ud06c<br>\\ub0a0\\uc9dc=%{x}<br>\\uac1c\\uc218=%{y}<br>\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed=%{customdata[0]}<extra></extra>\",\"legendgroup\":\"\\ud0f1\\ud06c\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\\ud0f1\\ud06c\",\"offsetgroup\":\"\\ud0f1\\ud06c\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-29T00:00:00\",\"2022-04-30T00:00:00\",\"2022-05-01T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-07T00:00:00\",\"2022-05-08T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-14T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-21T00:00:00\",\"2022-05-22T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-29T00:00:00\",\"2022-05-30T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-04T00:00:00\",\"2022-06-05T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-16T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-02T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-09T00:00:00\",\"2022-07-10T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-16T00:00:00\",\"2022-07-17T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-24T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-07-30T00:00:00\",\"2022-07-31T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-06T00:00:00\",\"2022-08-07T00:00:00\",\"2022-08-08T00:00:00\"],\"xaxis\":\"x\",\"y\":[11,34,16,22,18,22,14,15,12,8,15,25,8,10,13,9,15,7,8,9,3,10,7,8,11,2,4,9,5,5,4,3,5,2,2,9,7,8,15,5,1,4,5,35,1,3,4,4,0,18,5,5,7,3,4,9,4,14,8,7,1,4,7,10,4,3,10,3,6],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"customdata\":[[\"Sievierodonetsk\"],[\"Sievierodonetsk\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Popasna\"],[\"Slobozhanskyi\"],[\"Novopavlivsk\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Sievierodonetsk\"],[\"Lyman\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Avdiivka\"],[\"Mykolaiv\"],[\"Mykolaiv\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"]],\"hovertemplate\":\"\\ud0d1\\uc2b9\\uc7a5\\ube44_\\uc885\\ub958=\\uc7a5\\uac11\\ucc28<br>\\ub0a0\\uc9dc=%{x}<br>\\uac1c\\uc218=%{y}<br>\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed=%{customdata[0]}<extra></extra>\",\"legendgroup\":\"\\uc7a5\\uac11\\ucc28\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\\uc7a5\\uac11\\ucc28\",\"offsetgroup\":\"\\uc7a5\\uac11\\ucc28\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-29T00:00:00\",\"2022-04-30T00:00:00\",\"2022-05-01T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-07T00:00:00\",\"2022-05-08T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-14T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-21T00:00:00\",\"2022-05-22T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-29T00:00:00\",\"2022-05-30T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-04T00:00:00\",\"2022-06-05T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-16T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-02T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-09T00:00:00\",\"2022-07-10T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-16T00:00:00\",\"2022-07-17T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-24T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-07-30T00:00:00\",\"2022-07-31T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-06T00:00:00\",\"2022-08-07T00:00:00\",\"2022-08-08T00:00:00\"],\"xaxis\":\"x\",\"y\":[20,50,29,27,26,48,48,41,27,28,23,44,17,27,34,27,26,25,25,28,19,22,11,12,12,11,12,13,13,8,16,13,9,8,11,17,18,18,17,16,6,10,1,14,4,8,5,1,3,0,34,8,5,7,6,13,7,13,8,9,12,8,8,8,9,6,19,4,15],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"customdata\":[[\"Sievierodonetsk\"],[\"Sievierodonetsk\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Popasna\"],[\"Slobozhanskyi\"],[\"Novopavlivsk\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Sievierodonetsk\"],[\"Lyman\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Avdiivka\"],[\"Mykolaiv\"],[\"Mykolaiv\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"]],\"hovertemplate\":\"\\ud0d1\\uc2b9\\uc7a5\\ube44_\\uc885\\ub958=\\ud574\\uad70\\ud568\\uc815<br>\\ub0a0\\uc9dc=%{x}<br>\\uac1c\\uc218=%{y}<br>\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed=%{customdata[0]}<extra></extra>\",\"legendgroup\":\"\\ud574\\uad70\\ud568\\uc815\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\\ud574\\uad70\\ud568\\uc815\",\"offsetgroup\":\"\\ud574\\uad70\\ud568\\uc815\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-29T00:00:00\",\"2022-04-30T00:00:00\",\"2022-05-01T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-07T00:00:00\",\"2022-05-08T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-14T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-21T00:00:00\",\"2022-05-22T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-29T00:00:00\",\"2022-05-30T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-04T00:00:00\",\"2022-06-05T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-16T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-02T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-09T00:00:00\",\"2022-07-10T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-16T00:00:00\",\"2022-07-17T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-24T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-07-30T00:00:00\",\"2022-07-31T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-06T00:00:00\",\"2022-08-07T00:00:00\",\"2022-08-08T00:00:00\"],\"xaxis\":\"x\",\"y\":[0,0,0,0,0,0,2,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"customdata\":[[\"Sievierodonetsk\"],[\"Sievierodonetsk\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Izyum\"],[\"Popasna\"],[\"Slobozhanskyi\"],[\"Novopavlivsk\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Kurakhove\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Sievierodonetsk\"],[\"Lyman\"],[\"Avdiivka\"],[\"Avdiivka\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Zaporizhzhia\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Sloviansk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Avdiivka\"],[\"Mykolaiv\"],[\"Mykolaiv\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Bakhmut\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Sloviansk\"],[\"Kramatorsk\"],[\"Kramatorsk\"],[\"Bakhmut\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Kryvyi Rih\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"],[\"Donetsk\"]],\"hovertemplate\":\"\\ud0d1\\uc2b9\\uc7a5\\ube44_\\uc885\\ub958=\\ud0c8\\uac83_\\ubc0f_\\uc5f0\\ub8cc\\ud0f1\\ud06c<br>\\ub0a0\\uc9dc=%{x}<br>\\uac1c\\uc218=%{y}<br>\\ud53c\\ud574\\uac00_\\ud070_\\uc9c0\\uc5ed=%{customdata[0]}<extra></extra>\",\"legendgroup\":\"\\ud0c8\\uac83_\\ubc0f_\\uc5f0\\ub8cc\\ud0f1\\ud06c\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\\ud0c8\\uac83_\\ubc0f_\\uc5f0\\ub8cc\\ud0f1\\ud06c\",\"offsetgroup\":\"\\ud0c8\\uac83_\\ubc0f_\\uc5f0\\ub8cc\\ud0f1\\ud06c\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-29T00:00:00\",\"2022-04-30T00:00:00\",\"2022-05-01T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-07T00:00:00\",\"2022-05-08T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-14T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-21T00:00:00\",\"2022-05-22T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-29T00:00:00\",\"2022-05-30T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-04T00:00:00\",\"2022-06-05T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-16T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-02T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-09T00:00:00\",\"2022-07-10T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-16T00:00:00\",\"2022-07-17T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-24T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-07-30T00:00:00\",\"2022-07-31T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-06T00:00:00\",\"2022-08-07T00:00:00\",\"2022-08-08T00:00:00\"],\"xaxis\":\"x\",\"y\":[0,0,0,0,1796,28,19,40,8,27,9,10,22,23,17,5,16,16,12,7,4,8,1,14,18,35,4,8,23,35,10,1,15,5,13,9,2,5,14,9,4,8,4,20,2,7,2,3,5,16,11,4,11,7,14,8,6,3,9,3,12,7,16,19,13,4,6,8,15],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"\\ub0a0\\uc9dc\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"\\uac1c\\uc218\"}},\"legend\":{\"title\":{\"text\":\"\\ud0d1\\uc2b9\\uc7a5\\ube44_\\uc885\\ub958\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\",\"title\":{\"text\":\"<b> \\uc2dc\\uac04\\ubcc4 \\ud0d1\\uc2b9\\uc7a5\\ube44 \\ud30c\\uad34 \\uac1c\\uc218 \\ucd94\\uc774</b>\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('87aa8453-68b1-4b0f-a7a6-1278ff27bbf5');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 마지막 시각화 준비 항공기, 헬리콥터, 해군함정은 아예 보이지도 않음. 이거 시각화 하면 좋고.\n",
        "# 그 https://chancoding.tistory.com/96 에서 마지막 subplot 진행하는거 이거 해줘야함 \n",
        "#https://plotly.com/python/bar-charts/\n",
        "#https://plotly.com/python/bar-charts/"
      ],
      "metadata": {
        "id": "PykotMWug620"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "## Part 5. 머신러닝을 이용한 데이터분석\n",
        ">머신러닝을 이용하여 현재 집계되지 않은 최대 피해를 입은 지역을 맞춰봅시다.\n",
        "\n",
        "*  장비 및 인명피해가 나타난 데이터를 결합합니다. (위에서 결합한 데이터를 이용합시다.)\n",
        "* 데이터를 살펴보고, 필요한 부분을 사용하기 위해 전처리를 진행하여 봅시다.\n",
        "\n"
      ],
      "metadata": {
        "id": "zvPzRUdl1QJl"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "🔰  현재 데이터는 8월 8일까지의 데이터를 보여줍니다.\n",
        " * 현재 캐글데이터는 9월3일까지의 추가되어 있습니다.\n",
        " * 9월 3일까지의 데이터를 받고, 8월8일부터 ~ 9월 4일까지의 **'사망자 수' ** 를 예측하여 봅시다.\n"
      ],
      "metadata": {
        "id": "mDZvDFxU5Lp1"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "❗ 새로 사용할 데이터 또한 누적데이터로 되어있으므로 일별데이터로 정제합니다."
      ],
      "metadata": {
        "id": "B63Otv1d7fBi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#데이터 불러오기.\n",
        "url_01 ='/content/drive/MyDrive/new_project02/최근_러시아_장비손실_자료.csv'\n",
        "url_02 = '/content/drive/MyDrive/new_project02/최근_러시아_인명피해_자료.csv'\n",
        "\n",
        "\n",
        "# 데이터 생성\n",
        "eq_df_01 = pd.read_csv(url_01)\n",
        "pp_df_01 = pd.read_csv(url_02) \n",
        "\n",
        "# 데이터 컬럼명 통일\n",
        "eq_df_01.columns  # Index(['date', 'day', 'personnel', 'personnel*', 'POW'], dtype='object')\n",
        "pp_df_01.columns # Index(['date', 'day', 'aircraft', 'helicopter', 'tank', 'APC',\n",
        "             #       'field artillery', 'MRL', 'military auto', 'fuel tank', 'drone',\n",
        "             #       'naval ship', 'anti-aircraft warfare', 'special equipment',\n",
        "             #        'mobile SRBM system', 'greatest losses direction',\n",
        "             #       'vehicles and fuel tanks', 'cruise missiles'],\n",
        "             #      dtype='object')\n",
        "\n",
        "\n",
        " # 날짜 컬럼 : 시계열 데이터로 변경\n",
        "eq_df_01['date'] = pd.to_datetime(eq_df_01['date'])\n",
        "\n",
        "# 3가지 컬럼을 인덱스로 내려버림 Why? : 누적데이터의 차를 계산할때, 연속형 변수가 아니므로 계산 불가.\n",
        "eq_df_01 = eq_df_01.set_index(['date', 'day', 'greatest losses direction'])\n",
        "\n",
        "# 각 컬럼별 값의 차,\n",
        "eq_df_01 = eq_df_01.diff().fillna(eq_df_01).fillna(0).astype(int).reset_index()\n",
        "\n",
        "\n",
        "# 컬럼명 재구성\n",
        "eq_df_01 = eq_df_01.rename(columns={'date':'날짜','day':'개전일','aircraft':'항공기','helicopter':'헬리콥터','tank' : '탱크',\n",
        "                    'APC':'장갑차','field artillery': '야포' ,'MRL' :'다중로켓발사기','military auto' : '자동화기기',\n",
        "                    'fuel tank': '연료탱크', 'drone':'드론' ,'naval ship' : '해군함정', 'anti-aircraft warfare' : '방공포', 'special equipment' : '특수_장비',\n",
        "                    'mobile SRBM system' : '자동화_탄도_미사일', 'vehicles and fuel tanks' : '탈것_및_연료탱크', 'cruise missiles' : '크루즈_미사일','greatest losses direction' : '피해가_큰_지역'})\n",
        "\n",
        "\n",
        "# 인명피해 데이터 재구성\n",
        "\n",
        "\n",
        "# 날짜 컬럼 : 시계열 데이터 구성\n",
        "pp_df_01['date'] = pd.to_datetime(pp_df_01['date'])\n",
        "\n",
        "\n",
        "# 컬럼중 각 컬럼의 차를 계산할 수 없는 컬럼 인덱스로 내려버림.\n",
        "pp_df_01 = pp_df_01.set_index(['date', 'day', 'personnel*'])\n",
        "\n",
        "# 데이터 컬럼별 차이 계산 및 결측치 채우기, 아래로 내려놨던 인덱스 다시 생성\n",
        "pp_df_01 = pp_df_01.diff().fillna(pp_df_01).fillna(0).astype(int).reset_index()\n",
        "\n",
        "# 컬럼명 재구성\n",
        "pp_df_01 = pp_df_01.rename(columns={'date':'날짜', 'day':'개전일', 'personnel':'사망자_수', 'personnel*':'불확실한_사망자', 'POW':'전쟁_포로'})\n",
        "\n",
        "\n",
        "# 데이터 병합\n",
        "test_df = pd.merge(eq_df_01, pp_df_01, on =['날짜', '개전일'])\n",
        "\n",
        "# 165번 행부터 진행할 것 입니다. 또한 '사망자_수' 나타내는 컬럼은 삭제합니다.\n",
        "test_df_01 = test_df.iloc[165:].drop(['사망자_수'], axis =1)\n",
        "\n",
        "# 위에서 추가 한 컬럼을 지워주고, train_df를 생성해줍시다\n",
        "train_df_01 = merge_df.drop(['파괴된_장비의_총_개수'], axis = 1)\n",
        "\n",
        "# 컬럼은 1개의 차이가 있을 것 입니다. => 사망자_수 \n",
        "print(f'테스트 데이터 모양 {test_df_01.shape}, 훈련 데이터 모양 {train_df_01.shape}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O_0T6xfT7n-v",
        "outputId": "08f293bd-f640-4881-dd92-f5cfd416a76b"
      },
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "테스트 데이터 모양 (26, 20), 훈련 데이터 모양 (165, 21)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Part 5 - 1 통계정보를 활용하기.\n",
        ">`사망자_수 `의 통계정보를 확인하여 봅시다."
      ],
      "metadata": {
        "id": "lN3d823rKHL8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# '사망자_수'에 대한 최소, 최대, 평균, 중앙값 계산\n",
        "\n",
        "a = train_df_01['사망자_수'].min() \n",
        "b = train_df_01['사망자_수'].max() \n",
        "c = train_df_01['사망자_수'].mean() \n",
        "d = train_df_01['사망자_수'].median()\n",
        "\n",
        "print('컬럼 : 사망자 수에 대한 최소, 최대, 평균, 중앙값 계산')\n",
        "print('\\n')\n",
        "print(f'최소값 : {a} \\n최대값 : {b} \\n평균값 : {c} \\n중앙값 {d}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EOvUP30HMn_I",
        "outputId": "2f15e76e-3f69-4b2d-8ec8-f8a9ffdf0d71"
      },
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "컬럼 : 사망자 수에 대한 최소, 최대, 평균, 중앙값 계산\n",
            "\n",
            "\n",
            "최소값 : 0 \n",
            "최대값 : 3160 \n",
            "평균값 : 256.6060606060606 \n",
            "중앙값 200.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 통계정보 간단하게 요약\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "id": "mbcri7dsPjKh",
        "outputId": "e85fb7f8-e8f2-4291-eb47-4b3b10095d30"
      },
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-85-556ad4d59b0b>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    print(f'{train_df_01['사망자_수'].min()}')\u001b[0m\n\u001b[0m                              ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ftDUsV57QpMI"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}